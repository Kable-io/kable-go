openapi: 3.0.0
info:
  contact:
    email: contact@kable.io
    name: Kable
    url: https://kable.io
  description: "The Kable API allows developers to manage customers, plans, and usage\
    \ data for their API.\n\n## API Host and Environments\n\nKable is accessible in\
    \ Live and Test environments for authentication and metering of client API requests.\
    \ You will have separate API keys to access each environment.\n\nYou should only\
    \ use Kable's Live environment for your own production data. All other configured\
    \ environments should use Kable's Test environment.\n\n## API Protocols and Headers\n\
    \nAll requests to the Kable API are made over HTTPS TLS v1.2+ to ensure security.\
    \ Calls made over HTTP will fail. Any requests without proper authentication will\
    \ also fail.\n\nThe Kable API uses standard JSON for requests and responses. Be\
    \ sure to set both the `Content-Type` and `Accept` headers on each request to\
    \ `application/json`.\n\nEach Kable API response includes a `requestId` as the\
    \ `X-REQUEST-ID` response header. The `requestId` is included on most responses\
    \ regardless whether the API request succeeded or failed. You can use this `requestId`\
    \ to help with debugging or when contacting support regarding a specific API call.\n\
    \n## API Versioning\n\nAll Kable endpoints are versioned. After the host, each\
    \ API can be found at `/api/vX/...` where X is the API version.\n\nWe strive to\
    \ ensure that changes to the Kable API are backward compatible. Sometimes, though,\
    \ we must break from older design paradigms to make the product better. When this\
    \ happens, a new version of the API is released.\n\nThe current version of the\
    \ Kable API is `v1`.\n\n"
  title: Kable API
  version: 1.0.0
externalDocs:
  description: Kable Documentation
  url: https://docs.kable.io
servers:
- description: Kable Live
  url: https://live.kable.io
- description: Kable Test
  url: https://test.kable.io
paths:
  /api/v1/bundles:
    get:
      description: Retrieve all bundles.
      operationId: getBundles
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BundleResponseDto'
                type: array
          description: Information about all bundles
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: get all bundles
      tags:
      - bundles
  /api/v1/bundles/{bundleId}:
    get:
      description: Retrieve a bundle.
      operationId: getBundle
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The bundle ID
        example: bun_a23e148584d0463482c961b7f62f824c
        explode: false
        in: path
        name: bundleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleResponseDto'
          description: Information about your bundle
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: get bundle
      tags:
      - bundles
  /api/v1/bundles/create:
    post:
      description: Create a bundle.
      operationId: createBundle
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBundleRequestDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BundleResponseDto'
                type: array
          description: Bundle successfully created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: create bundle
      tags:
      - bundles
  /api/v1/bundles/{bundleId}/update:
    post:
      description: Update a bundle.
      operationId: updateBundle
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The bundle ID
        example: bun_a23e148584d0463482c961b7f62f824c
        explode: false
        in: path
        name: bundleId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBundleRequestDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleResponseDto'
          description: Bundle successfully updated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: update bundle
      tags:
      - bundles
  /api/v1/bundles/{bundleId}/delete:
    post:
      description: |-
        Delete a bundle.

        You cannot delete a bundle to which a customer is actively subscribed.
      operationId: deleteBundle
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The bundle ID
        example: bun_a23e148584d0463482c961b7f62f824c
        explode: false
        in: path
        name: bundleId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: Bundle successfully deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: delete bundle
      tags:
      - bundles
  /api/v1/customers:
    get:
      description: Retrieve all customers.
      operationId: getCustomers
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerResponseDto'
                type: array
          description: Information about all customers
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: get all customers
      tags:
      - customers
  /api/v1/customers/{customerId}:
    get:
      description: Retrieve a customer.
      operationId: getCustomer
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The customer ID
        example: cus_8276e1ac8ed84d21c64f31ae0082fe
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponseDto'
          description: information about your customer
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: get customer
      tags:
      - customers
  /api/v1/customers/create:
    post:
      description: |-
        Create a new customer. Call this when a new customer signs up for your API.

        You can this API in the `LIVE` or `TEST` environment and the outcome will be the same. Customers exist across environments. Handling of subsequent customer requests in a given environment are governed by the environment-specific keys (`LIVE` or `TEST`) they use to authenticate.

        Note that clients can also be created manually from within the Customers tab of your Kable dashboard.
      operationId: createCustomer
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: "When true, Kable will also create and attach a Stripe customer.\n\
          \nIf your account is not connected to Stripe, the request will fail. If\
          \ you provide a `stripeCustomerId` in the request body, this query parameter\
          \ will be ignored."
        example: true
        explode: true
        in: query
        name: stripe
        required: false
        schema:
          type: boolean
        style: form
      - description: "When true, Kable will create API keys for this customer. (This\
          \ is only necessary if you use Kable for authentication.)"
        example: true
        explode: true
        in: query
        name: keys
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequestDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponseWithKeysDto'
          description: New customer successfully created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: create customer
      tags:
      - customers
  /api/v1/customers/{customerId}/update:
    post:
      description: |-
        Update a customer. Call this to programmatically update information about an existing customer.

        Note that clients can also be updated manually from within the Customers tab of your Kable dashboard.
      operationId: updateCustomer
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The customer ID
        example: cus_8276e1ac8ed84d21c64f31ae0082fe
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerRequestDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponseDto'
          description: Customer successfully updated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: update customer
      tags:
      - customers
  /api/v1/customers/{customerId}/cancel:
    post:
      description: Cancelling a customer will update its status to `CANCELLED` and
        terminate all future billing.
      operationId: cancelCustomer
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The customer ID
        example: cus_8276e1ac8ed84d21c64f31ae0082fe
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponseDto'
          description: Customer successfully cancelled
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: cancel a customer
      tags:
      - customers
  /api/v1/customers/{customerId}/delete:
    post:
      description: "Deleting a customer will erase all record of the customer identity\
        \ in Kable. This action is irreversible, and should only be used for the purposes\
        \ of GDPR / CCPA."
      operationId: deleteCustomer
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The customer ID
        example: cus_8276e1ac8ed84d21c64f31ae0082fe
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: Customer successfully deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: delete customer
      tags:
      - customers
  /api/v1/customers/{customerId}/plans/add:
    post:
      description: |-
        Add a plan(s) to a customer.

        Note that customer plans can also be added and removed manually from within the Customers tab of your Kable dashboard.
      operationId: createCustomerPlan
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The customer ID
        example: cus_8276e1ac8ed84d21c64f31ae0082fe
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerPlansRequestDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponseDto'
          description: Customer plan successfully added
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: add customer plan(s)
      tags:
      - customers
  /api/v1/customers/{customerId}/plans/remove:
    post:
      description: |-
        Remove a plan(s) from a customer.

        Note that customer plans can also be added and removed manually from within the Customers tab of your Kable dashboard.
      operationId: removeCustomerPlan
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The customer ID
        example: cus_8276e1ac8ed84d21c64f31ae0082fe
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveCustomerPlansRequestDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponseDto'
          description: Customer plan successfully removed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: remove customer plan(s)
      tags:
      - customers
  /api/v1/customers/{customerId}/bundles/add:
    post:
      description: |-
        Add a bundle to a customer.

        Note that customer bundles can also be added and removed manually from within the Customers tab of your Kable dashboard.
      operationId: createCustomerBundle
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The customer ID
        example: cus_8276e1ac8ed84d21c64f31ae0082fe
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerBundleRequestDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponseDto'
          description: Customer bundle successfully added
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: add customer bundle
      tags:
      - customers
  /api/v1/customers/{customerId}/bundles/remove:
    post:
      description: |-
        Remove a bundle to a customer.

        Note that customer bundles can also be added and removed manually from within the Customers tab of your Kable dashboard.
      operationId: removeCustomerBundle
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The customer ID
        example: cus_8276e1ac8ed84d21c64f31ae0082fe
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveCustomerBundleRequestDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponseDto'
          description: Customer bundle successfully removed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: remove customer bundle
      tags:
      - customers
  /api/v1/customers/{customerId}/payment_methods/add:
    post:
      description: "Collect a payment method / credit card for a customer.\n\nCalling\
        \ this method creates a short-lived [Stripe Checkout Session](https://stripe.com/payments/checkout)\
        \ to allow your customers to enter payment method details. This API will return\
        \ a Stripe URL to which you should redirect your customers to securely add\
        \ their credit card information. Upon completion, Stripe will redirect back\
        \ to the provided URLs."
      operationId: createCustomerPaymentMethod
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The customer ID
        example: cus_8276e1ac8ed84d21c64f31ae0082fe
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCustomerPaymentMethodRequestDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCustomerPaymentMethodResponseDto'
          description: Stripe Checkout Session successfully created to collect customer
            payment method
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: add customer payment method
      tags:
      - customers
  /api/v1/customers/{customerId}/credits/balance:
    get:
      description: Get a customer's available credit balance.
      operationId: getCustomerCreditBalance
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The customer ID
        example: cus_8276e1ac8ed84d21c64f31ae0082fe
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditBalanceResponseDto'
          description: Customer credit grant balance
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: get customer credit balance
      tags:
      - customers
  /api/v1/customers/{customerId}/credits/create:
    post:
      description: Add a credit grant to a customer.
      operationId: createCustomerCreditGrant
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The customer ID
        example: cus_8276e1ac8ed84d21c64f31ae0082fe
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCreditGrantRequestDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditGrantResponseDto'
          description: Credit grant successfully created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: create customer credit grant
      tags:
      - customers
  /api/v1/customers/{customerId}/entitlements:
    get:
      description: "Retrieve all customer entitlements, inferred from the customer's\
        \ plans."
      operationId: getCustomerEntitlements
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The customer ID
        example: cus_2a3b4c5d6e7f8g9h0i1j2k3l4m5n6o7p
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CustomerEntitlementResponseDto'
                type: array
          description: Information about all plan entitlements
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: get all customer entitlements
      tags:
      - customers
  /api/v1/customers/{customerId}/entitlements/{entitlementId}:
    get:
      description: Retrieve a customer entitlement.
      operationId: getCustomerEntitlement
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The customer ID
        example: cus_2a3b4c5d6e7f8g9h0i1j2k3l4m5n6o7p
        explode: false
        in: path
        name: customerId
        required: true
        schema:
          type: string
        style: simple
      - description: The entitlement ID
        example: ent_4d5e6f7g8h9i0j1k2l3m4n5o6p1a2b3c
        explode: false
        in: path
        name: entitlementId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerEntitlementResponseDto'
          description: Information about a plan entitlements
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: get customer entitlement
      tags:
      - customers
  /api/v1/dimensions:
    get:
      description: Retrieve all dimensions.
      operationId: getDimensions
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DimensionResponseDto'
                type: array
          description: Information about your dimensions
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: get all dimensions
      tags:
      - dimensions
  /api/v1/dimensions/{dimensionId}:
    get:
      description: Retrieve a dimension.
      operationId: getDimension
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The dimension ID
        example: dim_c5f32b8cd8934356b5167a3b2c6c6314
        explode: false
        in: path
        name: dimensionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DimensionResponseDto'
          description: Information about your dimension
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: get dimension
      tags:
      - dimensions
  /api/v1/dimensions/create:
    post:
      description: Create a dimension.
      operationId: createDimension
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDimensionRequestDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DimensionResponseDto'
          description: Dimension successfully created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: create dimension
      tags:
      - dimensions
  /api/v1/dimensions/{dimensionId}/update:
    post:
      description: Update a dimension.
      operationId: updateDimension
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The dimension ID
        example: dim_c5f32b8cd8934356b5167a3b2c6c6314
        explode: false
        in: path
        name: dimensionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDimensionRequestDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DimensionResponseDto'
          description: Dimension successfully updated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: update dimension
      tags:
      - dimensions
  /api/v1/dimensions/{dimensionId}/delete:
    post:
      description: |-
        Delete a dimension.

         You cannot delete a dimension if it is in use by a plan.
      operationId: deleteDimension
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The dimension ID
        example: dim_c5f32b8cd8934356b5167a3b2c6c6314
        explode: false
        in: path
        name: dimensionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: Dimension successfully deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: delete dimension
      tags:
      - dimensions
  /api/v1/entitlements:
    get:
      description: Retrieve all entitlements.
      operationId: getEntitlements
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EntitlementResponseDto'
                type: array
          description: Information about all entitlements
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: get all entitlements
      tags:
      - entitlements
  /api/v1/entitlements/{entitlementId}:
    get:
      description: Retrieve an entitlement.
      operationId: getEntitlement
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The entitlement ID
        example: ent_a44e148584d0463482c961b7f62f825d
        explode: false
        in: path
        name: entitlementId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementResponseDto'
          description: Information about the entitlement
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: get entitlement
      tags:
      - entitlements
  /api/v1/entitlements/create:
    post:
      description: Create an entitlement.
      operationId: createEntitlement
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEntitlementDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementResponseDto'
          description: Entitlement successfully created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: create entitlement
      tags:
      - entitlements
  /api/v1/entitlements/{entitlementId}/update:
    post:
      description: Update an entitlement.
      operationId: updateEntitlement
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The entitlement ID
        example: ent_a44e148584d0463482c961b7f62f825d
        explode: false
        in: path
        name: entitlementId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEntitlementDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementResponseDto'
          description: Entitlement successfully updated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: update entitlement
      tags:
      - entitlements
  /api/v1/entitlements/{entitlementId}/delete:
    post:
      description: Delete an entitlement.
      operationId: deleteEntitlement
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The entitlement ID
        example: ent_a44e148584d0463482c961b7f62f825d
        explode: false
        in: path
        name: entitlementId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: Entitlement successfully deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: delete entitlement
      tags:
      - entitlements
  /api/v1/plans:
    get:
      description: Retrieve all plans.
      operationId: getPlans
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PlanResponseDto'
                type: array
          description: Information about all plans
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: get all plans
      tags:
      - plans
  /api/v1/plans/{planId}:
    get:
      description: Retrieve a plan.
      operationId: getPlan
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The plan ID
        example: pln_a23e148584d0463482c961b7f62f824c
        explode: false
        in: path
        name: planId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanResponseDto'
          description: Information about your plan
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: get plan
      tags:
      - plans
  /api/v1/plans/create:
    post:
      description: Create a plan.
      operationId: createPlan
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePlanRequestDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanResponseDto'
          description: Plan successfully created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: create plan
      tags:
      - plans
  /api/v1/plans/{planId}/update:
    post:
      description: Update a plan.
      operationId: updatePlan
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The plan ID
        example: pln_a23e148584d0463482c961b7f62f824c
        explode: false
        in: path
        name: planId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanRequestDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanResponseDto'
          description: Plan successfully updated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: update plan
      tags:
      - plans
  /api/v1/plans/{planId}/delete:
    post:
      description: |-
        Delete a plan.

        You cannot delete a plan to which a customer is actively subscribed.
      operationId: deletePlan
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The plan ID
        example: pln_a23e148584d0463482c961b7f62f824c
        explode: false
        in: path
        name: planId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: Plan successfully deleted
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: delete plan
      tags:
      - plans
  /api/v1/plans/{planId}/entitlements:
    get:
      description: Retrieve all plan entitlements.
      operationId: getAllPlanEntitlements
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The plan ID
        example: pln_a23e148584d0463482c961b7f62f824c
        explode: false
        in: path
        name: planId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PlanEntitlementResponseDto'
                type: array
          description: Information about all plan entitlements
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: get all plan entitlements
      tags:
      - plans
  /api/v1/plans/{planId}/entitlements/{entitlementId}:
    get:
      description: Retrieve a plan entitlement.
      operationId: getPlanEntitlement
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The plan ID
        example: pln_a23e148584d0463482c961b7f62f824c
        explode: false
        in: path
        name: planId
        required: true
        schema:
          type: string
        style: simple
      - description: The entitlement ID
        example: ent_a44e148584d0463482c961b7f62f825d
        explode: false
        in: path
        name: entitlementId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanEntitlementResponseDto'
          description: Information about the plan entitlement
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: get plan entitlement
      tags:
      - plans
  /api/v1/plans/{planId}/entitlements/{entitlementId}/update:
    post:
      description: Update a plan entitlement.
      operationId: updatePlanEntitlement
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The plan ID
        example: pln_a23e148584d0463482c961b7f62f824c
        explode: false
        in: path
        name: planId
        required: true
        schema:
          type: string
        style: simple
      - description: The entitlement ID
        example: ent_a44e148584d0463482c961b7f62f825d
        explode: false
        in: path
        name: entitlementId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlanEntitlementRequestDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanEntitlementResponseDto'
          description: Plan entitlement successfully updated
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: update plan entitlement
      tags:
      - plans
  /api/v1/plans/{planId}/entitlements/add:
    post:
      description: Add an entitlement to a plan.
      operationId: addPlanEntitlement
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The plan ID
        example: pln_a23e148584d0463482c961b7f62f824c
        explode: false
        in: path
        name: planId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPlanEntitlementRequestDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanResponseDto'
          description: Plan entitlement successfully added
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: add plan entitlement
      tags:
      - plans
  /api/v1/plans/{planId}/entitlements/remove:
    post:
      description: Remove an entitlement from a plan.
      operationId: removePlanEntitlement
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The plan ID
        example: pln_a23e148584d0463482c961b7f62f824c
        explode: false
        in: path
        name: planId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemovePlanEntitlementRequestDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanResponseDto'
          description: Plan entitlement successfully removed
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: remove plan entitlement
      tags:
      - plans
  /api/v1/invoices:
    get:
      description: Retrieve all invoices.
      operationId: getInvoices
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: A Kable-defined identifier for the customer.
        example: cus_8276e1ac8ed84d21c64f31ae0082fe
        explode: true
        in: query
        name: customerId
        required: false
        schema:
          type: string
        style: form
      - description: "A unique identifier for the customer, defined by you."
        example: yourcompanyuser_1234567890
        explode: true
        in: query
        name: clientId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/InvoiceResponseDto'
                type: array
          description: Information about all invoices
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: get all invoices
      tags:
      - invoices
  /api/v1/invoices/{invoiceId}:
    get:
      description: Retrieve an invoice
      operationId: getInvoice
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The invoice ID
        example: inv_346daaa242674b179ecc44f43b5b9db4
        explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceResponseDto'
          description: Information about an invoice
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: get invoice
      tags:
      - invoices
  /api/v1/invoices/{invoiceId}/download:
    get:
      description: Download an invoice
      operationId: downloadInvoice
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      - description: The invoice ID
        example: inv_346daaa242674b179ecc44f43b5b9db4
        explode: false
        in: path
        name: invoiceId
        required: true
        schema:
          type: string
        style: simple
      - description: The downloaded file format
        example: pdf
        explode: true
        in: query
        name: format
        required: true
        schema:
          enum:
          - pdf
          - csv
          type: string
        style: form
      responses:
        "200":
          description: Invoice successfully downloaded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: download invoice
      tags:
      - invoices
  /api/v1/tokens/create:
    post:
      description: Generate a new access token for embedding Kable dashboards within
        your developer portal.
      operationId: createToken
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokenDto'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardTokenResponseDto'
          description: Token successfully created
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: create token
      tags:
      - tokens
  /api/v1/usage/get:
    post:
      description: Retrieve a usage metric for a given dimension from Kable.
      operationId: getUsage
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsageMetricRequestDto'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsageMetricResponseDto'
          description: Usage metrics
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: get usage metric
      tags:
      - usage
  /api/v1/authenticate:
    post:
      description: "Learn more about Kable as an Authentication Provider in the [documentation](https://docs.kable.io/docs/kable-as-an-authentication-provider)."
      operationId: doAuthentication
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: The client ID of the customer to authenticate.
        explode: false
        in: header
        name: X-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: An API key to authenticate for the provided X-Client-Id.
        explode: false
        in: header
        name: X-Api-Key
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "401":
          description: Unauthorized
      summary: authenticate API request
      tags:
      - authentication
  /api/v1/events/create:
    post:
      description: |-
        Record information about something that happened in your API.

        Kable uses events to perform metering and usage-based billing calculations.
      operationId: createEvent
      parameters:
      - description: "Your Kable client ID, found in the dashboard of your Kable account."
        explode: false
        in: header
        name: Kable-Client-Id
        required: true
        schema:
          type: string
        style: simple
      - description: Your `LIVE` or `TEST` secret key.
        explode: false
        in: header
        name: Kable-Client-Secret
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/EventDto'
              type: array
        description: An event or list of usage events to record.
        required: true
      responses:
        "200":
          description: Events successfully recorded
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage401'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage500'
          description: Something went wrong
      summary: record events
      tags:
      - events
components:
  schemas:
    ErrorMessage401:
      properties:
        message:
          description: Human-readable error message
          example: Unauthorized
          type: string
      required:
      - message
      type: object
    ErrorMessage500:
      properties:
        message:
          description: Human-readable error message
          example: Something went wrong
          type: string
      required:
      - message
      type: object
    PriceTierResponseDto:
      properties:
        type:
          description: The tier price type
          enum:
          - UNIT
          - PACKAGE
          - FLAT
          - PERCENTAGE
          - SUBSCRIPTION
          - MINIMUM
          - MAXIMUM
          - DISCOUNT
          example: UNIT
          type: string
        amount:
          description: The tier price amount
          example: 199.99
          type: number
        start:
          description: The tier start amount
          example: 0
          type: number
        finish:
          description: The tier finish amount (infinity indicated by -1)
          example: -1
          type: number
        packageSize:
          description: The tier package size (only applicable to package price tiers)
          example: 1000
          type: number
      required:
      - amount
      - type
      type: object
    PlanPriceResponseDto:
      properties:
        currency:
          description: Three-letter ISO currency code
          enum:
          - USD
          - CAD
          - MXN
          - EUR
          - GBP
          - JPY
          - INR
          - CNY
          - AUD
          - NZD
          - AED
          example: USD
          type: string
        tiers:
          description: The tiered pricing of the plan
          items:
            $ref: '#/components/schemas/PriceTierResponseDto'
          type: array
      required:
      - currency
      - tiers
      type: object
    ResourceEntitlementResponseDto:
      example:
        datatype: STRING
        created: 2023-03-01T00:00:00Z
        name: Premium Support
        entitlementId: ent_a44e148584d0463482c961b7f62f825d
        externalId: yourcompany_entitlement789
        description: Customers have access to 24/7 premium support channels through
          Slack and email.
        modified: 2023-03-01T00:00:00Z
        value: true
      properties:
        name:
          description: The name of the entitlement
          example: Premium Support
          type: string
        entitlementId:
          description: A Kable-defined identifier for the entitlement.
          example: ent_a44e148584d0463482c961b7f62f825d
          type: string
        externalId:
          description: An identifier for the entitlement as defined by your API.
          example: yourcompany_entitlement789
          type: string
        datatype:
          description: The type of data supported by the entitlement.
          example: STRING
          type: string
        description:
          description: A description of the entitlement.
          example: Customers have access to 24/7 premium support channels through
            Slack and email.
          type: string
        created:
          description: Date at which entity was first created
          example: 2023-03-01T00:00:00Z
          format: date-time
          type: string
        modified:
          description: Date at which entity was last modified
          example: 2023-03-01T00:00:00Z
          format: date-time
          type: string
        value:
          description: The value of the entitlement.
          example: true
          type: object
      required:
      - created
      - datatype
      - description
      - entitlementId
      - externalId
      - modified
      - name
      - value
      type: object
    PlanResponseDto:
      example:
        entitlements:
        - datatype: STRING
          created: 2023-03-01T00:00:00Z
          name: Premium Support
          entitlementId: ent_a44e148584d0463482c961b7f62f825d
          externalId: yourcompany_entitlement789
          description: Customers have access to 24/7 premium support channels through
            Slack and email.
          modified: 2023-03-01T00:00:00Z
          value: true
        - datatype: STRING
          created: 2023-03-01T00:00:00Z
          name: Premium Support
          entitlementId: ent_a44e148584d0463482c961b7f62f825d
          externalId: yourcompany_entitlement789
          description: Customers have access to 24/7 premium support channels through
            Slack and email.
          modified: 2023-03-01T00:00:00Z
          value: true
        metadata:
          foo: bar
        created: 2022-03-01T00:00:00Z
        externalId: yourcompany_plan123
        description: A usage plan based on the number of API requests
        aggregation: COUNT
        type: USAGE
        dimensionId: dim_c5f32b8cd8934356b5167a3b2c6c6314
        price: null
        name: Requests Usage Plan
        nickname: requests_usage_v1
        modified: 2022-03-01T00:00:00Z
        planId: pln_a23e148584d0463482c961b7f62f824c
        interval: MONTH
      properties:
        planId:
          description: A Kable-defined identifier for the plan.
          example: pln_a23e148584d0463482c961b7f62f824c
          type: string
        name:
          description: "A human-readable name for the plan, visible on dashboards,\
            \ invoices, and reports."
          example: Requests Usage Plan
          type: string
        externalId:
          description: An identifier for the plan as defined by your API.
          example: yourcompany_plan123
          type: string
        description:
          description: "A human-readable description for the plan, visible on dashboards,\
            \ invoices, and reports."
          example: A usage plan based on the number of API requests
          type: string
        nickname:
          description: "An additional identifier for the plan, defined by you, that\
            \ is *not* visible to customers. If you have different *Monthly Active\
            \ Users Plan*s for different cohorts of customers, this is a useful place\
            \ to differentiate those."
          example: requests_usage_v1
          type: string
        type:
          description: The type of plan.
          enum:
          - USAGE
          - SUBCRIPTION
          example: USAGE
          type: string
        dimensionId:
          description: "An identifier of the dimension along which usage is aggregated\
            \ in this plan, relevant only for usage plans."
          example: dim_c5f32b8cd8934356b5167a3b2c6c6314
          type: string
        aggregation:
          description: "The aggregation along which usage metrics are calculated in\
            \ this plan, relevant only for usage plans."
          example: COUNT
          type: string
        interval:
          description: The billing interval for the plan.
          enum:
          - MONTH
          example: MONTH
          type: string
        metadata:
          description: Arbitrary key-value pairs to attach to the object that can
            be useful for controlling functionality inside your API.
          example:
            foo: bar
          type: object
        price:
          $ref: '#/components/schemas/PlanResponseDto_price'
        entitlements:
          description: The entitlements associated with this plan.
          items:
            $ref: '#/components/schemas/ResourceEntitlementResponseDto'
          type: array
        created:
          description: Date at which entity was first created
          example: 2022-03-01T00:00:00Z
          format: date-time
          type: string
        modified:
          description: Date at which entity was last modified
          example: 2022-03-01T00:00:00Z
          format: date-time
          type: string
      required:
      - created
      - dimensionId
      - entitlements
      - interval
      - modified
      - name
      - planId
      - price
      - type
      type: object
    BundleResponseDto:
      example:
        metadata:
          foo: bar
        plans:
        - entitlements:
          - datatype: STRING
            created: 2023-03-01T00:00:00Z
            name: Premium Support
            entitlementId: ent_a44e148584d0463482c961b7f62f825d
            externalId: yourcompany_entitlement789
            description: Customers have access to 24/7 premium support channels through
              Slack and email.
            modified: 2023-03-01T00:00:00Z
            value: true
          - datatype: STRING
            created: 2023-03-01T00:00:00Z
            name: Premium Support
            entitlementId: ent_a44e148584d0463482c961b7f62f825d
            externalId: yourcompany_entitlement789
            description: Customers have access to 24/7 premium support channels through
              Slack and email.
            modified: 2023-03-01T00:00:00Z
            value: true
          metadata:
            foo: bar
          created: 2022-03-01T00:00:00Z
          externalId: yourcompany_plan123
          description: A usage plan based on the number of API requests
          aggregation: COUNT
          type: USAGE
          dimensionId: dim_c5f32b8cd8934356b5167a3b2c6c6314
          price: null
          name: Requests Usage Plan
          nickname: requests_usage_v1
          modified: 2022-03-01T00:00:00Z
          planId: pln_a23e148584d0463482c961b7f62f824c
          interval: MONTH
        - entitlements:
          - datatype: STRING
            created: 2023-03-01T00:00:00Z
            name: Premium Support
            entitlementId: ent_a44e148584d0463482c961b7f62f825d
            externalId: yourcompany_entitlement789
            description: Customers have access to 24/7 premium support channels through
              Slack and email.
            modified: 2023-03-01T00:00:00Z
            value: true
          - datatype: STRING
            created: 2023-03-01T00:00:00Z
            name: Premium Support
            entitlementId: ent_a44e148584d0463482c961b7f62f825d
            externalId: yourcompany_entitlement789
            description: Customers have access to 24/7 premium support channels through
              Slack and email.
            modified: 2023-03-01T00:00:00Z
            value: true
          metadata:
            foo: bar
          created: 2022-03-01T00:00:00Z
          externalId: yourcompany_plan123
          description: A usage plan based on the number of API requests
          aggregation: COUNT
          type: USAGE
          dimensionId: dim_c5f32b8cd8934356b5167a3b2c6c6314
          price: null
          name: Requests Usage Plan
          nickname: requests_usage_v1
          modified: 2022-03-01T00:00:00Z
          planId: pln_a23e148584d0463482c961b7f62f824c
          interval: MONTH
        created: 2022-03-01T00:00:00Z
        bundleId: bun_a23e148584d0463482c961b7f62f824c
        name: Professional Package
        nickname: professional_2022
        externalId: yourcompany_bun123
        description: The perfect package for scaling businesses
        modified: 2022-03-01T00:00:00Z
        currency: USD
      properties:
        bundleId:
          description: A Kable-defined identifier for the bundle.
          example: bun_a23e148584d0463482c961b7f62f824c
          type: string
        name:
          description: "A human-readable name for the bundle, visible on dashboards,\
            \ invoices, and reports."
          example: Professional Package
          type: string
        externalId:
          description: An identifier for the bundle as defined by your API.
          example: yourcompany_bun123
          type: string
        description:
          description: "A human-readable description for the bundle, visible on dashboards,\
            \ invoices, and reports."
          example: The perfect package for scaling businesses
          type: string
        nickname:
          description: "An additional identifier for the bundle, defined by you, that\
            \ is *not* visible to customers. If you have different *Monthly Active\
            \ Users Bundle*s for different cohorts of customers, this is a useful\
            \ place to differentiate those."
          example: professional_2022
          type: string
        currency:
          description: Three-letter ISO currency code
          enum:
          - USD
          - CAD
          - MXN
          - EUR
          - GBP
          - JPY
          - INR
          - CNY
          - AUD
          - NZD
          - AED
          example: USD
          type: string
        plans:
          description: The plans included in this bundle.
          items:
            $ref: '#/components/schemas/PlanResponseDto'
          type: array
        metadata:
          description: Arbitrary key-value pairs to attach to the object that can
            be useful for controlling functionality inside your API.
          example:
            foo: bar
          type: object
        created:
          description: Date at which entity was first created
          example: 2022-03-01T00:00:00Z
          format: date-time
          type: string
        modified:
          description: Date at which entity was last modified
          example: 2022-03-01T00:00:00Z
          format: date-time
          type: string
      required:
      - bundleId
      - created
      - currency
      - modified
      - name
      type: object
    CreateBundleRequestDto:
      example:
        planIds:
        - planIds
        - planIds
        metadata: "{}"
        bundleId: bundleId
        name: name
        nickname: nickname
        externalId: externalId
        description: description
        costPerCredit: 0.8008281904610115
        currency: currency
      properties:
        bundleId:
          type: string
        name:
          type: string
        externalId:
          type: string
        description:
          type: string
        nickname:
          type: string
        planIds:
          items:
            type: string
          type: array
        currency:
          type: string
        costPerCredit:
          type: number
        metadata:
          type: object
      required:
      - bundleId
      - name
      type: object
    UpdateBundleRequestDto:
      example:
        planIds:
        - planIds
        - planIds
        metadata: "{}"
        bundleId: bundleId
        name: name
        nickname: nickname
        externalId: externalId
        description: description
        costPerCredit: 0.8008281904610115
        currency: currency
      properties:
        bundleId:
          type: string
        name:
          type: string
        externalId:
          type: string
        description:
          type: string
        nickname:
          type: string
        planIds:
          items:
            type: string
          type: array
        currency:
          type: string
        costPerCredit:
          type: number
        metadata:
          type: object
      type: object
    BillingContactRequestDto:
      properties:
        firstName:
          description: Contact's first name.
          example: Bruce
          type: string
        lastName:
          description: Contact's last name.
          example: Wayne
          type: string
        email:
          description: Contact's email address.
          example: bruce@wayneenterprises.com
          type: string
        phone:
          description: Contact's phone number.
          example: 555-555-5555
          type: string
        addressLine1:
          description: First line of contact's mailing address.
          example: 1007 Mountain Drive
          type: string
        addressLine2:
          description: Second line of contact's mailing address.
          example: Apt 1
          type: string
        city:
          description: City of contact's mailing address.
          example: Gotham
          type: string
        state:
          description: State of contact's mailing address.
          example: NY
          type: string
        postalCode:
          description: Postal code of contact's mailing address.
          example: "10001"
          type: string
        country:
          description: Country of contact's mailing address.
          example: US
          type: string
      type: object
    CustomerPlanResponseDto:
      example:
        entitlements:
        - datatype: STRING
          created: 2023-03-01T00:00:00Z
          name: Premium Support
          entitlementId: ent_a44e148584d0463482c961b7f62f825d
          externalId: yourcompany_entitlement789
          description: Customers have access to 24/7 premium support channels through
            Slack and email.
          modified: 2023-03-01T00:00:00Z
          value: true
        - datatype: STRING
          created: 2023-03-01T00:00:00Z
          name: Premium Support
          entitlementId: ent_a44e148584d0463482c961b7f62f825d
          externalId: yourcompany_entitlement789
          description: Customers have access to 24/7 premium support channels through
            Slack and email.
          modified: 2023-03-01T00:00:00Z
          value: true
        periodStartDate: 2000-01-23T04:56:07.000+00:00
        metadata:
          foo: bar
        addedDate: 2000-01-23T04:56:07.000+00:00
        endedDate: 2000-01-23T04:56:07.000+00:00
        created: 2022-03-01T00:00:00Z
        externalId: yourcompany_plan123
        description: A usage plan based on the number of API requests
        aggregation: COUNT
        type: USAGE
        periodEndDate: 2000-01-23T04:56:07.000+00:00
        dimensionId: dim_c5f32b8cd8934356b5167a3b2c6c6314
        price: null
        name: Requests Usage Plan
        nickname: requests_usage_v1
        modified: 2022-03-01T00:00:00Z
        planId: pln_a23e148584d0463482c961b7f62f824c
        interval: MONTH
      properties:
        planId:
          description: A Kable-defined identifier for the plan.
          example: pln_a23e148584d0463482c961b7f62f824c
          type: string
        name:
          description: "A human-readable name for the plan, visible on dashboards,\
            \ invoices, and reports."
          example: Requests Usage Plan
          type: string
        externalId:
          description: An identifier for the plan as defined by your API.
          example: yourcompany_plan123
          type: string
        description:
          description: "A human-readable description for the plan, visible on dashboards,\
            \ invoices, and reports."
          example: A usage plan based on the number of API requests
          type: string
        nickname:
          description: "An additional identifier for the plan, defined by you, that\
            \ is *not* visible to customers. If you have different *Monthly Active\
            \ Users Plan*s for different cohorts of customers, this is a useful place\
            \ to differentiate those."
          example: requests_usage_v1
          type: string
        type:
          description: The type of plan.
          enum:
          - USAGE
          - SUBCRIPTION
          example: USAGE
          type: string
        dimensionId:
          description: "An identifier of the dimension along which usage is aggregated\
            \ in this plan, relevant only for usage plans."
          example: dim_c5f32b8cd8934356b5167a3b2c6c6314
          type: string
        aggregation:
          description: "The aggregation along which usage metrics are calculated in\
            \ this plan, relevant only for usage plans."
          example: COUNT
          type: string
        interval:
          description: The billing interval for the plan.
          enum:
          - MONTH
          example: MONTH
          type: string
        metadata:
          description: Arbitrary key-value pairs to attach to the object that can
            be useful for controlling functionality inside your API.
          example:
            foo: bar
          type: object
        price:
          $ref: '#/components/schemas/PlanResponseDto_price'
        entitlements:
          description: The entitlements associated with this plan.
          items:
            $ref: '#/components/schemas/ResourceEntitlementResponseDto'
          type: array
        created:
          description: Date at which entity was first created
          example: 2022-03-01T00:00:00Z
          format: date-time
          type: string
        modified:
          description: Date at which entity was last modified
          example: 2022-03-01T00:00:00Z
          format: date-time
          type: string
        addedDate:
          format: date-time
          type: string
        endedDate:
          format: date-time
          type: string
        periodStartDate:
          format: date-time
          type: string
        periodEndDate:
          format: date-time
          type: string
      required:
      - addedDate
      - created
      - dimensionId
      - entitlements
      - interval
      - modified
      - name
      - planId
      - price
      - type
      type: object
    CustomerBundleResponseDto:
      example:
        metadata:
          foo: bar
        plans:
        - entitlements:
          - datatype: STRING
            created: 2023-03-01T00:00:00Z
            name: Premium Support
            entitlementId: ent_a44e148584d0463482c961b7f62f825d
            externalId: yourcompany_entitlement789
            description: Customers have access to 24/7 premium support channels through
              Slack and email.
            modified: 2023-03-01T00:00:00Z
            value: true
          - datatype: STRING
            created: 2023-03-01T00:00:00Z
            name: Premium Support
            entitlementId: ent_a44e148584d0463482c961b7f62f825d
            externalId: yourcompany_entitlement789
            description: Customers have access to 24/7 premium support channels through
              Slack and email.
            modified: 2023-03-01T00:00:00Z
            value: true
          metadata:
            foo: bar
          created: 2022-03-01T00:00:00Z
          externalId: yourcompany_plan123
          description: A usage plan based on the number of API requests
          aggregation: COUNT
          type: USAGE
          dimensionId: dim_c5f32b8cd8934356b5167a3b2c6c6314
          price: null
          name: Requests Usage Plan
          nickname: requests_usage_v1
          modified: 2022-03-01T00:00:00Z
          planId: pln_a23e148584d0463482c961b7f62f824c
          interval: MONTH
        - entitlements:
          - datatype: STRING
            created: 2023-03-01T00:00:00Z
            name: Premium Support
            entitlementId: ent_a44e148584d0463482c961b7f62f825d
            externalId: yourcompany_entitlement789
            description: Customers have access to 24/7 premium support channels through
              Slack and email.
            modified: 2023-03-01T00:00:00Z
            value: true
          - datatype: STRING
            created: 2023-03-01T00:00:00Z
            name: Premium Support
            entitlementId: ent_a44e148584d0463482c961b7f62f825d
            externalId: yourcompany_entitlement789
            description: Customers have access to 24/7 premium support channels through
              Slack and email.
            modified: 2023-03-01T00:00:00Z
            value: true
          metadata:
            foo: bar
          created: 2022-03-01T00:00:00Z
          externalId: yourcompany_plan123
          description: A usage plan based on the number of API requests
          aggregation: COUNT
          type: USAGE
          dimensionId: dim_c5f32b8cd8934356b5167a3b2c6c6314
          price: null
          name: Requests Usage Plan
          nickname: requests_usage_v1
          modified: 2022-03-01T00:00:00Z
          planId: pln_a23e148584d0463482c961b7f62f824c
          interval: MONTH
        created: 2022-03-01T00:00:00Z
        bundleId: bun_a23e148584d0463482c961b7f62f824c
        name: Professional Package
        nickname: professional_2022
        externalId: yourcompany_bun123
        description: The perfect package for scaling businesses
        modified: 2022-03-01T00:00:00Z
        currency: USD
      properties:
        bundleId:
          description: A Kable-defined identifier for the bundle.
          example: bun_a23e148584d0463482c961b7f62f824c
          type: string
        name:
          description: "A human-readable name for the bundle, visible on dashboards,\
            \ invoices, and reports."
          example: Professional Package
          type: string
        externalId:
          description: An identifier for the bundle as defined by your API.
          example: yourcompany_bun123
          type: string
        description:
          description: "A human-readable description for the bundle, visible on dashboards,\
            \ invoices, and reports."
          example: The perfect package for scaling businesses
          type: string
        nickname:
          description: "An additional identifier for the bundle, defined by you, that\
            \ is *not* visible to customers. If you have different *Monthly Active\
            \ Users Bundle*s for different cohorts of customers, this is a useful\
            \ place to differentiate those."
          example: professional_2022
          type: string
        currency:
          description: Three-letter ISO currency code
          enum:
          - USD
          - CAD
          - MXN
          - EUR
          - GBP
          - JPY
          - INR
          - CNY
          - AUD
          - NZD
          - AED
          example: USD
          type: string
        plans:
          description: The plans included in this bundle.
          items:
            $ref: '#/components/schemas/PlanResponseDto'
          type: array
        metadata:
          description: Arbitrary key-value pairs to attach to the object that can
            be useful for controlling functionality inside your API.
          example:
            foo: bar
          type: object
        created:
          description: Date at which entity was first created
          example: 2022-03-01T00:00:00Z
          format: date-time
          type: string
        modified:
          description: Date at which entity was last modified
          example: 2022-03-01T00:00:00Z
          format: date-time
          type: string
      required:
      - bundleId
      - created
      - currency
      - modified
      - name
      type: object
    CustomerResponseDto:
      example:
        entitlements:
        - datatype: STRING
          created: 2023-03-01T00:00:00Z
          name: Premium Support
          entitlementId: ent_a44e148584d0463482c961b7f62f825d
          externalId: yourcompany_entitlement789
          description: Customers have access to 24/7 premium support channels through
            Slack and email.
          modified: 2023-03-01T00:00:00Z
          value: true
        - datatype: STRING
          created: 2023-03-01T00:00:00Z
          name: Premium Support
          entitlementId: ent_a44e148584d0463482c961b7f62f825d
          externalId: yourcompany_entitlement789
          description: Customers have access to 24/7 premium support channels through
            Slack and email.
          modified: 2023-03-01T00:00:00Z
          value: true
        clientId: yourcompanyuser_1234567890
        billingContact: null
        created: 2022-03-01T00:00:00Z
        companyName: Awesome Corp
        kableClientId: kci_3c90e9ac92c64f31ae8ed84d21e18740
        plans:
        - entitlements:
          - datatype: STRING
            created: 2023-03-01T00:00:00Z
            name: Premium Support
            entitlementId: ent_a44e148584d0463482c961b7f62f825d
            externalId: yourcompany_entitlement789
            description: Customers have access to 24/7 premium support channels through
              Slack and email.
            modified: 2023-03-01T00:00:00Z
            value: true
          - datatype: STRING
            created: 2023-03-01T00:00:00Z
            name: Premium Support
            entitlementId: ent_a44e148584d0463482c961b7f62f825d
            externalId: yourcompany_entitlement789
            description: Customers have access to 24/7 premium support channels through
              Slack and email.
            modified: 2023-03-01T00:00:00Z
            value: true
          periodStartDate: 2000-01-23T04:56:07.000+00:00
          metadata:
            foo: bar
          addedDate: 2000-01-23T04:56:07.000+00:00
          endedDate: 2000-01-23T04:56:07.000+00:00
          created: 2022-03-01T00:00:00Z
          externalId: yourcompany_plan123
          description: A usage plan based on the number of API requests
          aggregation: COUNT
          type: USAGE
          periodEndDate: 2000-01-23T04:56:07.000+00:00
          dimensionId: dim_c5f32b8cd8934356b5167a3b2c6c6314
          price: null
          name: Requests Usage Plan
          nickname: requests_usage_v1
          modified: 2022-03-01T00:00:00Z
          planId: pln_a23e148584d0463482c961b7f62f824c
          interval: MONTH
        - entitlements:
          - datatype: STRING
            created: 2023-03-01T00:00:00Z
            name: Premium Support
            entitlementId: ent_a44e148584d0463482c961b7f62f825d
            externalId: yourcompany_entitlement789
            description: Customers have access to 24/7 premium support channels through
              Slack and email.
            modified: 2023-03-01T00:00:00Z
            value: true
          - datatype: STRING
            created: 2023-03-01T00:00:00Z
            name: Premium Support
            entitlementId: ent_a44e148584d0463482c961b7f62f825d
            externalId: yourcompany_entitlement789
            description: Customers have access to 24/7 premium support channels through
              Slack and email.
            modified: 2023-03-01T00:00:00Z
            value: true
          periodStartDate: 2000-01-23T04:56:07.000+00:00
          metadata:
            foo: bar
          addedDate: 2000-01-23T04:56:07.000+00:00
          endedDate: 2000-01-23T04:56:07.000+00:00
          created: 2022-03-01T00:00:00Z
          externalId: yourcompany_plan123
          description: A usage plan based on the number of API requests
          aggregation: COUNT
          type: USAGE
          periodEndDate: 2000-01-23T04:56:07.000+00:00
          dimensionId: dim_c5f32b8cd8934356b5167a3b2c6c6314
          price: null
          name: Requests Usage Plan
          nickname: requests_usage_v1
          modified: 2022-03-01T00:00:00Z
          planId: pln_a23e148584d0463482c961b7f62f824c
          interval: MONTH
        bundles:
        - metadata:
            foo: bar
          plans:
          - entitlements:
            - datatype: STRING
              created: 2023-03-01T00:00:00Z
              name: Premium Support
              entitlementId: ent_a44e148584d0463482c961b7f62f825d
              externalId: yourcompany_entitlement789
              description: Customers have access to 24/7 premium support channels
                through Slack and email.
              modified: 2023-03-01T00:00:00Z
              value: true
            - datatype: STRING
              created: 2023-03-01T00:00:00Z
              name: Premium Support
              entitlementId: ent_a44e148584d0463482c961b7f62f825d
              externalId: yourcompany_entitlement789
              description: Customers have access to 24/7 premium support channels
                through Slack and email.
              modified: 2023-03-01T00:00:00Z
              value: true
            metadata:
              foo: bar
            created: 2022-03-01T00:00:00Z
            externalId: yourcompany_plan123
            description: A usage plan based on the number of API requests
            aggregation: COUNT
            type: USAGE
            dimensionId: dim_c5f32b8cd8934356b5167a3b2c6c6314
            price: null
            name: Requests Usage Plan
            nickname: requests_usage_v1
            modified: 2022-03-01T00:00:00Z
            planId: pln_a23e148584d0463482c961b7f62f824c
            interval: MONTH
          - entitlements:
            - datatype: STRING
              created: 2023-03-01T00:00:00Z
              name: Premium Support
              entitlementId: ent_a44e148584d0463482c961b7f62f825d
              externalId: yourcompany_entitlement789
              description: Customers have access to 24/7 premium support channels
                through Slack and email.
              modified: 2023-03-01T00:00:00Z
              value: true
            - datatype: STRING
              created: 2023-03-01T00:00:00Z
              name: Premium Support
              entitlementId: ent_a44e148584d0463482c961b7f62f825d
              externalId: yourcompany_entitlement789
              description: Customers have access to 24/7 premium support channels
                through Slack and email.
              modified: 2023-03-01T00:00:00Z
              value: true
            metadata:
              foo: bar
            created: 2022-03-01T00:00:00Z
            externalId: yourcompany_plan123
            description: A usage plan based on the number of API requests
            aggregation: COUNT
            type: USAGE
            dimensionId: dim_c5f32b8cd8934356b5167a3b2c6c6314
            price: null
            name: Requests Usage Plan
            nickname: requests_usage_v1
            modified: 2022-03-01T00:00:00Z
            planId: pln_a23e148584d0463482c961b7f62f824c
            interval: MONTH
          created: 2022-03-01T00:00:00Z
          bundleId: bun_a23e148584d0463482c961b7f62f824c
          name: Professional Package
          nickname: professional_2022
          externalId: yourcompany_bun123
          description: The perfect package for scaling businesses
          modified: 2022-03-01T00:00:00Z
          currency: USD
        - metadata:
            foo: bar
          plans:
          - entitlements:
            - datatype: STRING
              created: 2023-03-01T00:00:00Z
              name: Premium Support
              entitlementId: ent_a44e148584d0463482c961b7f62f825d
              externalId: yourcompany_entitlement789
              description: Customers have access to 24/7 premium support channels
                through Slack and email.
              modified: 2023-03-01T00:00:00Z
              value: true
            - datatype: STRING
              created: 2023-03-01T00:00:00Z
              name: Premium Support
              entitlementId: ent_a44e148584d0463482c961b7f62f825d
              externalId: yourcompany_entitlement789
              description: Customers have access to 24/7 premium support channels
                through Slack and email.
              modified: 2023-03-01T00:00:00Z
              value: true
            metadata:
              foo: bar
            created: 2022-03-01T00:00:00Z
            externalId: yourcompany_plan123
            description: A usage plan based on the number of API requests
            aggregation: COUNT
            type: USAGE
            dimensionId: dim_c5f32b8cd8934356b5167a3b2c6c6314
            price: null
            name: Requests Usage Plan
            nickname: requests_usage_v1
            modified: 2022-03-01T00:00:00Z
            planId: pln_a23e148584d0463482c961b7f62f824c
            interval: MONTH
          - entitlements:
            - datatype: STRING
              created: 2023-03-01T00:00:00Z
              name: Premium Support
              entitlementId: ent_a44e148584d0463482c961b7f62f825d
              externalId: yourcompany_entitlement789
              description: Customers have access to 24/7 premium support channels
                through Slack and email.
              modified: 2023-03-01T00:00:00Z
              value: true
            - datatype: STRING
              created: 2023-03-01T00:00:00Z
              name: Premium Support
              entitlementId: ent_a44e148584d0463482c961b7f62f825d
              externalId: yourcompany_entitlement789
              description: Customers have access to 24/7 premium support channels
                through Slack and email.
              modified: 2023-03-01T00:00:00Z
              value: true
            metadata:
              foo: bar
            created: 2022-03-01T00:00:00Z
            externalId: yourcompany_plan123
            description: A usage plan based on the number of API requests
            aggregation: COUNT
            type: USAGE
            dimensionId: dim_c5f32b8cd8934356b5167a3b2c6c6314
            price: null
            name: Requests Usage Plan
            nickname: requests_usage_v1
            modified: 2022-03-01T00:00:00Z
            planId: pln_a23e148584d0463482c961b7f62f824c
            interval: MONTH
          created: 2022-03-01T00:00:00Z
          bundleId: bun_a23e148584d0463482c961b7f62f824c
          name: Professional Package
          nickname: professional_2022
          externalId: yourcompany_bun123
          description: The perfect package for scaling businesses
          modified: 2022-03-01T00:00:00Z
          currency: USD
        customerId: cus_8276e1ac8ed84d21c64f31ae0082fe
        modified: 2022-03-01T00:00:00Z
        currency: USD
        nextInvoiceDate: 2022-05-12T00:00:00Z
        status: ACTIVE
      properties:
        kableClientId:
          description: "Your Kable client ID, found in the dashboard of your Kable\
            \ account"
          example: kci_3c90e9ac92c64f31ae8ed84d21e18740
          type: string
        customerId:
          description: A Kable-defined identifier for the customer.
          example: cus_8276e1ac8ed84d21c64f31ae0082fe
          type: string
        clientId:
          description: "A unique identifier for the customer, defined by you."
          example: yourcompanyuser_1234567890
          type: string
        companyName:
          description: The name of the customer.
          example: Awesome Corp
          type: string
        currency:
          description: Three-letter ISO currency code
          enum:
          - USD
          - CAD
          - MXN
          - EUR
          - GBP
          - JPY
          - INR
          - CNY
          - AUD
          - NZD
          - AED
          example: USD
          type: string
        status:
          description: The status of the customer.
          enum:
          - ACTIVE
          - CANCELLED
          example: ACTIVE
          type: string
        nextInvoiceDate:
          description: The date at which the customer's next invoice will occur.
          example: 2022-05-12T00:00:00Z
          format: date-time
          type: string
        billingContact:
          $ref: '#/components/schemas/CustomerResponseDto_billingContact'
        plans:
          description: The customer's plans.
          items:
            $ref: '#/components/schemas/CustomerPlanResponseDto'
          type: array
        bundles:
          description: The customer's bundles.
          items:
            $ref: '#/components/schemas/CustomerBundleResponseDto'
          type: array
        entitlements:
          description: The customer's entitlements.
          items:
            $ref: '#/components/schemas/ResourceEntitlementResponseDto'
          type: array
        created:
          description: Date at which entity was first created
          example: 2022-03-01T00:00:00Z
          format: date-time
          type: string
        modified:
          description: Date at which entity was last modified
          example: 2022-03-01T00:00:00Z
          format: date-time
          type: string
      required:
      - bundles
      - clientId
      - companyName
      - created
      - currency
      - customerId
      - entitlements
      - kableClientId
      - modified
      - plans
      - status
      type: object
    CreateCustomerRequestDto:
      example:
        planIds:
        - pln_a23e148584d0463482c961b7f62f824c
        clientId: yourcompanyuser_1234567890
        billingContact: null
        companyName: Awesome Corp
        bundleIds:
        - bun_a23e148584d0463482c961b7f62f824c
        currency: USD
        stripeCustomerId: stripeCustomerId
      properties:
        clientId:
          description: "A unique identifier for the customer, defined by you. This\
            \ usually corresponds to your own internal unique identifier for customers,\
            \ and is the identifier by which Kable attributes customer usage."
          example: yourcompanyuser_1234567890
          type: string
        companyName:
          description: "The name of the customer, visible on dashboards, invoices,\
            \ and reports."
          example: Awesome Corp
          type: string
        currency:
          description: Three-letter ISO currency code
          enum:
          - USD
          - CAD
          - MXN
          - EUR
          - GBP
          - JPY
          - INR
          - CNY
          - AUD
          - NZD
          - AED
          example: USD
          type: string
        stripeCustomerId:
          description: "The customer's Stripe `customer_id`, if one already exists,\
            \ for automatic invoice processing through Stripe."
          type: string
        planIds:
          description: A collection of plans to which to subscribe the customer.
          example:
          - pln_a23e148584d0463482c961b7f62f824c
          items:
            type: string
          type: array
        bundleIds:
          description: A collection of bundles to which to subscribe the customer.
          example:
          - bun_a23e148584d0463482c961b7f62f824c
          items:
            type: string
          type: array
        billingContact:
          $ref: '#/components/schemas/CustomerResponseDto_billingContact'
      required:
      - clientId
      - companyName
      - currency
      type: object
    KeyResponseDto:
      example:
        clientId: yourcompanyuser_1234567890
        created: 2022-03-01T00:00:00Z
        revokedAt: 2022-05-10T00:00:00Z
        key: sk_test_.a924be71...
      properties:
        clientId:
          description: "A unique identifier for the customer, defined by you."
          example: yourcompanyuser_1234567890
          type: string
        key:
          description: The API key value
          example: sk_test_.a924be71...
          type: string
        revokedAt:
          description: The time at which the key was revoked
          example: 2022-05-10T00:00:00Z
          format: date-time
          type: string
        created:
          description: Date at which entity was first created
          example: 2022-03-01T00:00:00Z
          format: date-time
          type: string
      required:
      - clientId
      - created
      - key
      type: object
    CustomerResponseWithKeysDto:
      example:
        entitlements:
        - datatype: STRING
          created: 2023-03-01T00:00:00Z
          name: Premium Support
          entitlementId: ent_a44e148584d0463482c961b7f62f825d
          externalId: yourcompany_entitlement789
          description: Customers have access to 24/7 premium support channels through
            Slack and email.
          modified: 2023-03-01T00:00:00Z
          value: true
        - datatype: STRING
          created: 2023-03-01T00:00:00Z
          name: Premium Support
          entitlementId: ent_a44e148584d0463482c961b7f62f825d
          externalId: yourcompany_entitlement789
          description: Customers have access to 24/7 premium support channels through
            Slack and email.
          modified: 2023-03-01T00:00:00Z
          value: true
        clientId: yourcompanyuser_1234567890
        billingContact: null
        created: 2022-03-01T00:00:00Z
        keys:
        - clientId: yourcompanyuser_1234567890
          created: 2022-03-01T00:00:00Z
          revokedAt: 2022-05-10T00:00:00Z
          key: sk_test_.a924be71...
        - clientId: yourcompanyuser_1234567890
          created: 2022-03-01T00:00:00Z
          revokedAt: 2022-05-10T00:00:00Z
          key: sk_test_.a924be71...
        companyName: Awesome Corp
        kableClientId: kci_3c90e9ac92c64f31ae8ed84d21e18740
        plans:
        - entitlements:
          - datatype: STRING
            created: 2023-03-01T00:00:00Z
            name: Premium Support
            entitlementId: ent_a44e148584d0463482c961b7f62f825d
            externalId: yourcompany_entitlement789
            description: Customers have access to 24/7 premium support channels through
              Slack and email.
            modified: 2023-03-01T00:00:00Z
            value: true
          - datatype: STRING
            created: 2023-03-01T00:00:00Z
            name: Premium Support
            entitlementId: ent_a44e148584d0463482c961b7f62f825d
            externalId: yourcompany_entitlement789
            description: Customers have access to 24/7 premium support channels through
              Slack and email.
            modified: 2023-03-01T00:00:00Z
            value: true
          periodStartDate: 2000-01-23T04:56:07.000+00:00
          metadata:
            foo: bar
          addedDate: 2000-01-23T04:56:07.000+00:00
          endedDate: 2000-01-23T04:56:07.000+00:00
          created: 2022-03-01T00:00:00Z
          externalId: yourcompany_plan123
          description: A usage plan based on the number of API requests
          aggregation: COUNT
          type: USAGE
          periodEndDate: 2000-01-23T04:56:07.000+00:00
          dimensionId: dim_c5f32b8cd8934356b5167a3b2c6c6314
          price: null
          name: Requests Usage Plan
          nickname: requests_usage_v1
          modified: 2022-03-01T00:00:00Z
          planId: pln_a23e148584d0463482c961b7f62f824c
          interval: MONTH
        - entitlements:
          - datatype: STRING
            created: 2023-03-01T00:00:00Z
            name: Premium Support
            entitlementId: ent_a44e148584d0463482c961b7f62f825d
            externalId: yourcompany_entitlement789
            description: Customers have access to 24/7 premium support channels through
              Slack and email.
            modified: 2023-03-01T00:00:00Z
            value: true
          - datatype: STRING
            created: 2023-03-01T00:00:00Z
            name: Premium Support
            entitlementId: ent_a44e148584d0463482c961b7f62f825d
            externalId: yourcompany_entitlement789
            description: Customers have access to 24/7 premium support channels through
              Slack and email.
            modified: 2023-03-01T00:00:00Z
            value: true
          periodStartDate: 2000-01-23T04:56:07.000+00:00
          metadata:
            foo: bar
          addedDate: 2000-01-23T04:56:07.000+00:00
          endedDate: 2000-01-23T04:56:07.000+00:00
          created: 2022-03-01T00:00:00Z
          externalId: yourcompany_plan123
          description: A usage plan based on the number of API requests
          aggregation: COUNT
          type: USAGE
          periodEndDate: 2000-01-23T04:56:07.000+00:00
          dimensionId: dim_c5f32b8cd8934356b5167a3b2c6c6314
          price: null
          name: Requests Usage Plan
          nickname: requests_usage_v1
          modified: 2022-03-01T00:00:00Z
          planId: pln_a23e148584d0463482c961b7f62f824c
          interval: MONTH
        bundles:
        - metadata:
            foo: bar
          plans:
          - entitlements:
            - datatype: STRING
              created: 2023-03-01T00:00:00Z
              name: Premium Support
              entitlementId: ent_a44e148584d0463482c961b7f62f825d
              externalId: yourcompany_entitlement789
              description: Customers have access to 24/7 premium support channels
                through Slack and email.
              modified: 2023-03-01T00:00:00Z
              value: true
            - datatype: STRING
              created: 2023-03-01T00:00:00Z
              name: Premium Support
              entitlementId: ent_a44e148584d0463482c961b7f62f825d
              externalId: yourcompany_entitlement789
              description: Customers have access to 24/7 premium support channels
                through Slack and email.
              modified: 2023-03-01T00:00:00Z
              value: true
            metadata:
              foo: bar
            created: 2022-03-01T00:00:00Z
            externalId: yourcompany_plan123
            description: A usage plan based on the number of API requests
            aggregation: COUNT
            type: USAGE
            dimensionId: dim_c5f32b8cd8934356b5167a3b2c6c6314
            price: null
            name: Requests Usage Plan
            nickname: requests_usage_v1
            modified: 2022-03-01T00:00:00Z
            planId: pln_a23e148584d0463482c961b7f62f824c
            interval: MONTH
          - entitlements:
            - datatype: STRING
              created: 2023-03-01T00:00:00Z
              name: Premium Support
              entitlementId: ent_a44e148584d0463482c961b7f62f825d
              externalId: yourcompany_entitlement789
              description: Customers have access to 24/7 premium support channels
                through Slack and email.
              modified: 2023-03-01T00:00:00Z
              value: true
            - datatype: STRING
              created: 2023-03-01T00:00:00Z
              name: Premium Support
              entitlementId: ent_a44e148584d0463482c961b7f62f825d
              externalId: yourcompany_entitlement789
              description: Customers have access to 24/7 premium support channels
                through Slack and email.
              modified: 2023-03-01T00:00:00Z
              value: true
            metadata:
              foo: bar
            created: 2022-03-01T00:00:00Z
            externalId: yourcompany_plan123
            description: A usage plan based on the number of API requests
            aggregation: COUNT
            type: USAGE
            dimensionId: dim_c5f32b8cd8934356b5167a3b2c6c6314
            price: null
            name: Requests Usage Plan
            nickname: requests_usage_v1
            modified: 2022-03-01T00:00:00Z
            planId: pln_a23e148584d0463482c961b7f62f824c
            interval: MONTH
          created: 2022-03-01T00:00:00Z
          bundleId: bun_a23e148584d0463482c961b7f62f824c
          name: Professional Package
          nickname: professional_2022
          externalId: yourcompany_bun123
          description: The perfect package for scaling businesses
          modified: 2022-03-01T00:00:00Z
          currency: USD
        - metadata:
            foo: bar
          plans:
          - entitlements:
            - datatype: STRING
              created: 2023-03-01T00:00:00Z
              name: Premium Support
              entitlementId: ent_a44e148584d0463482c961b7f62f825d
              externalId: yourcompany_entitlement789
              description: Customers have access to 24/7 premium support channels
                through Slack and email.
              modified: 2023-03-01T00:00:00Z
              value: true
            - datatype: STRING
              created: 2023-03-01T00:00:00Z
              name: Premium Support
              entitlementId: ent_a44e148584d0463482c961b7f62f825d
              externalId: yourcompany_entitlement789
              description: Customers have access to 24/7 premium support channels
                through Slack and email.
              modified: 2023-03-01T00:00:00Z
              value: true
            metadata:
              foo: bar
            created: 2022-03-01T00:00:00Z
            externalId: yourcompany_plan123
            description: A usage plan based on the number of API requests
            aggregation: COUNT
            type: USAGE
            dimensionId: dim_c5f32b8cd8934356b5167a3b2c6c6314
            price: null
            name: Requests Usage Plan
            nickname: requests_usage_v1
            modified: 2022-03-01T00:00:00Z
            planId: pln_a23e148584d0463482c961b7f62f824c
            interval: MONTH
          - entitlements:
            - datatype: STRING
              created: 2023-03-01T00:00:00Z
              name: Premium Support
              entitlementId: ent_a44e148584d0463482c961b7f62f825d
              externalId: yourcompany_entitlement789
              description: Customers have access to 24/7 premium support channels
                through Slack and email.
              modified: 2023-03-01T00:00:00Z
              value: true
            - datatype: STRING
              created: 2023-03-01T00:00:00Z
              name: Premium Support
              entitlementId: ent_a44e148584d0463482c961b7f62f825d
              externalId: yourcompany_entitlement789
              description: Customers have access to 24/7 premium support channels
                through Slack and email.
              modified: 2023-03-01T00:00:00Z
              value: true
            metadata:
              foo: bar
            created: 2022-03-01T00:00:00Z
            externalId: yourcompany_plan123
            description: A usage plan based on the number of API requests
            aggregation: COUNT
            type: USAGE
            dimensionId: dim_c5f32b8cd8934356b5167a3b2c6c6314
            price: null
            name: Requests Usage Plan
            nickname: requests_usage_v1
            modified: 2022-03-01T00:00:00Z
            planId: pln_a23e148584d0463482c961b7f62f824c
            interval: MONTH
          created: 2022-03-01T00:00:00Z
          bundleId: bun_a23e148584d0463482c961b7f62f824c
          name: Professional Package
          nickname: professional_2022
          externalId: yourcompany_bun123
          description: The perfect package for scaling businesses
          modified: 2022-03-01T00:00:00Z
          currency: USD
        customerId: cus_8276e1ac8ed84d21c64f31ae0082fe
        modified: 2022-03-01T00:00:00Z
        currency: USD
        nextInvoiceDate: 2022-05-12T00:00:00Z
        status: ACTIVE
      properties:
        kableClientId:
          description: "Your Kable client ID, found in the dashboard of your Kable\
            \ account"
          example: kci_3c90e9ac92c64f31ae8ed84d21e18740
          type: string
        customerId:
          description: A Kable-defined identifier for the customer.
          example: cus_8276e1ac8ed84d21c64f31ae0082fe
          type: string
        clientId:
          description: "A unique identifier for the customer, defined by you."
          example: yourcompanyuser_1234567890
          type: string
        companyName:
          description: The name of the customer.
          example: Awesome Corp
          type: string
        currency:
          description: Three-letter ISO currency code
          enum:
          - USD
          - CAD
          - MXN
          - EUR
          - GBP
          - JPY
          - INR
          - CNY
          - AUD
          - NZD
          - AED
          example: USD
          type: string
        status:
          description: The status of the customer.
          enum:
          - ACTIVE
          - CANCELLED
          example: ACTIVE
          type: string
        nextInvoiceDate:
          description: The date at which the customer's next invoice will occur.
          example: 2022-05-12T00:00:00Z
          format: date-time
          type: string
        billingContact:
          $ref: '#/components/schemas/CustomerResponseDto_billingContact'
        plans:
          description: The customer's plans.
          items:
            $ref: '#/components/schemas/CustomerPlanResponseDto'
          type: array
        bundles:
          description: The customer's bundles.
          items:
            $ref: '#/components/schemas/CustomerBundleResponseDto'
          type: array
        entitlements:
          description: The customer's entitlements.
          items:
            $ref: '#/components/schemas/ResourceEntitlementResponseDto'
          type: array
        created:
          description: Date at which entity was first created
          example: 2022-03-01T00:00:00Z
          format: date-time
          type: string
        modified:
          description: Date at which entity was last modified
          example: 2022-03-01T00:00:00Z
          format: date-time
          type: string
        keys:
          description: The customer's API keys (relevant only if you use Kable as
            an authentication provider)
          items:
            $ref: '#/components/schemas/KeyResponseDto'
          type: array
      required:
      - bundles
      - clientId
      - companyName
      - created
      - currency
      - customerId
      - entitlements
      - kableClientId
      - modified
      - plans
      - status
      type: object
    UpdateCustomerRequestDto:
      example:
        billingContact: null
        companyName: Awesome Corp
        currency: USD
        stripeCustomerId: cus_a91565WBFwU30c
      properties:
        companyName:
          description: "The name of the customer, visible on dashboards, invoices,\
            \ and reports."
          example: Awesome Corp
          type: string
        currency:
          description: The currency with which this customer pays for plans.
          example: USD
          type: string
        stripeCustomerId:
          description: "The customer's Stripe `customer_id`, if any, for automatic\
            \ invoice processing through Stripe."
          example: cus_a91565WBFwU30c
          type: string
        billingContact:
          $ref: '#/components/schemas/CustomerResponseDto_billingContact'
      type: object
    CreateCustomerPlansRequestDto:
      example:
        planIds:
        - pln_a23e148584d0463482c961b7f62f824c
      properties:
        planIds:
          description: A collection of plans to which to subscribe the customer.
          example:
          - pln_a23e148584d0463482c961b7f62f824c
          items:
            type: string
          type: array
      type: object
    RemoveCustomerPlansRequestDto:
      example:
        planIds:
        - pln_a23e148584d0463482c961b7f62f824c
        - pln_b177473b31d44c3b8a2a365618a3deca
        planId: pln_a23e148584d0463482c961b7f62f824c
      properties:
        planId:
          description: The identifier for a single plan.
          example: pln_a23e148584d0463482c961b7f62f824c
          type: string
        planIds:
          description: The identifiers for many plans.
          example:
          - pln_a23e148584d0463482c961b7f62f824c
          - pln_b177473b31d44c3b8a2a365618a3deca
          items:
            type: string
          type: array
      type: object
    CreateCustomerBundleRequestDto:
      example:
        bundleId: bun_a23e148584d0463482c961b7f62f824c
      properties:
        bundleId:
          description: The identifier for the bundle.
          example: bun_a23e148584d0463482c961b7f62f824c
          type: string
      required:
      - bundleId
      type: object
    RemoveCustomerBundleRequestDto:
      example:
        bundleId: bun_a23e148584d0463482c961b7f62f824c
      properties:
        bundleId:
          description: Bundle ID to remove.
          example: bun_a23e148584d0463482c961b7f62f824c
          type: string
      required:
      - bundleId
      type: object
    AddCustomerPaymentMethodRequestDto:
      example:
        cancelUrl: https://yourcompany.com/signup/failure?success=false
        successUrl: https://yourcompany.com/signup/complete?success=true
      properties:
        successUrl:
          description: The url to which to redirect after successful payment method
            creation
          example: https://yourcompany.com/signup/complete?success=true
          type: string
        cancelUrl:
          description: The url to which to redirect after failed payment method creation
          example: https://yourcompany.com/signup/failure?success=false
          type: string
      required:
      - cancelUrl
      - successUrl
      type: object
    AddCustomerPaymentMethodResponseDto:
      example:
        url: https://checkout.stripe.com/pay/cs_test_c1PJzZEmw9vH1x978D...
      properties:
        url:
          description: The Stripe checkout url to which to redirect customers to complete
            payment method creation
          example: https://checkout.stripe.com/pay/cs_test_c1PJzZEmw9vH1x978D...
          type: string
      required:
      - url
      type: object
    CreditBalanceResponseDto:
      example:
        available: 75
      properties:
        available:
          description: The customer's available credit grant balance
          example: 75
          type: number
      required:
      - available
      type: object
    CreateCreditGrantRequestDto:
      example:
        description: A top-up grant to buy more API credits.
        chargeAmount: 199.99
        expiration: 2023-01-01T00:00:00Z
        grantAmount: 100
      properties:
        grantAmount:
          description: The number of credits to create in the grant.
          example: 100
          type: number
        chargeAmount:
          description: "An optional amount to charge the customer (in the customer's\
            \ configured `currency`) before issuing a credit grant.\n\nWhen the `chargeAmount`\
            \ field is supplied, Kable will attempt to charge the customer immediately\
            \ through Stripe before issuing the grant. Therefore, when specifying\
            \ a `chargeAmount`, the customer must have a Stripe integration defined\
            \ and have a default payment card on-file."
          example: 199.99
          type: number
        description:
          description: A human-readable description that explains why the credit grant
            is being created.
          example: A top-up grant to buy more API credits.
          type: string
        expiration:
          description: The expiration date of the credit grant.
          example: 2023-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - grantAmount
      type: object
    CreditGrantResponseDto:
      example:
        creditGrantId: crd_f55ad8df7b4b4890881595d3d8005c4f
        customerId: cus_8276e1ac8ed84d21c64f31ae0082fe
        description: A top-up grant to buy more API credits.
        currency: USD
        expiration: 2023-01-01T00:00:00Z
        balanceAmount: 100
        grantAmount: 100
        paidAmount: 199.99
      properties:
        creditGrantId:
          description: A Kable-defined identifier for the credit grant.
          example: crd_f55ad8df7b4b4890881595d3d8005c4f
          type: string
        customerId:
          description: The customer for whom the credit was granted.
          example: cus_8276e1ac8ed84d21c64f31ae0082fe
          type: string
        grantAmount:
          description: The number of credits granted.
          example: 100
          type: number
        balanceAmount:
          description: The number of credits available.
          example: 100
          type: number
        paidAmount:
          description: The amount paid for the grant.
          example: 199.99
          type: number
        currency:
          description: Three-letter ISO currency code
          enum:
          - USD
          - CAD
          - MXN
          - EUR
          - GBP
          - JPY
          - INR
          - CNY
          - AUD
          - NZD
          - AED
          example: USD
          type: string
        description:
          description: A human-readable description that explains why the credit grant
            was created.
          example: A top-up grant to buy more API credits.
          type: string
        expiration:
          description: The expiration date of the credit grant.
          example: 2023-01-01T00:00:00Z
          format: date-time
          type: string
      required:
      - balanceAmount
      - creditGrantId
      - currency
      - customerId
      - grantAmount
      type: object
    CustomerEntitlementResponseDto:
      example:
        datatype: STRING
        created: 2023-03-01T00:00:00Z
        name: Premium Support
        entitlementId: ent_a44e148584d0463482c961b7f62f825d
        externalId: yourcompany_entitlement789
        description: Customers have access to 24/7 premium support channels through
          Slack and email.
        modified: 2023-03-01T00:00:00Z
        value: true
      properties:
        name:
          description: The name of the entitlement
          example: Premium Support
          type: string
        entitlementId:
          description: A Kable-defined identifier for the entitlement.
          example: ent_a44e148584d0463482c961b7f62f825d
          type: string
        externalId:
          description: An identifier for the entitlement as defined by your API.
          example: yourcompany_entitlement789
          type: string
        datatype:
          description: The type of data supported by the entitlement.
          example: STRING
          type: string
        description:
          description: A description of the entitlement.
          example: Customers have access to 24/7 premium support channels through
            Slack and email.
          type: string
        created:
          description: Date at which entity was first created
          example: 2023-03-01T00:00:00Z
          format: date-time
          type: string
        modified:
          description: Date at which entity was last modified
          example: 2023-03-01T00:00:00Z
          format: date-time
          type: string
        value:
          description: The value of the entitlement.
          example: true
          type: object
      required:
      - created
      - datatype
      - description
      - entitlementId
      - externalId
      - modified
      - name
      - value
      type: object
    DimensionResponseDto:
      example:
        dimensionId: dim_c5f32b8cd8934356b5167a3b2c6c6314
        name: User
        key: userId
      properties:
        dimensionId:
          description: A Kable-defined identifier for the dimension.
          example: dim_c5f32b8cd8934356b5167a3b2c6c6314
          type: string
        key:
          description: "An identifier for the dimension defined by you. This key corresponds\
            \ to the key in the JSON payload of a usage event, and can be passed into\
            \ the `record` library method."
          example: userId
          type: string
        name:
          description: "A human-readable name for the dimension, visible on dashboards,\
            \ invoices, and reports."
          example: User
          type: string
      required:
      - dimensionId
      - key
      - name
      type: object
    CreateDimensionRequestDto:
      example:
        name: User
        key: userId
      properties:
        key:
          description: The key by which Kable identifies the dimension in your usage
            events.
          example: userId
          type: string
        name:
          description: "A human-readable name for the dimension which will be visible\
            \ in dashboards and on invoices. Dimension names should be singular, not\
            \ plural (ie \"User,\" not \"Users\")"
          example: User
          type: string
      required:
      - key
      - name
      type: object
    UpdateDimensionRequestDto:
      example:
        name: User
      properties:
        name:
          description: "A human-readable name for the dimension which will be visible\
            \ in dashboards and on invoices. Dimension names should be singular, not\
            \ plural (ie \"User,\" not \"Users\")."
          example: User
          type: string
      required:
      - name
      type: object
    EntitlementResponseDto:
      example:
        datatype: STRING
        created: 2023-03-01T00:00:00Z
        name: Premium Support
        entitlementId: ent_a44e148584d0463482c961b7f62f825d
        externalId: yourcompany_entitlement789
        description: Customers have access to 24/7 premium support channels through
          Slack and email.
        modified: 2023-03-01T00:00:00Z
      properties:
        name:
          description: The name of the entitlement
          example: Premium Support
          type: string
        entitlementId:
          description: A Kable-defined identifier for the entitlement.
          example: ent_a44e148584d0463482c961b7f62f825d
          type: string
        externalId:
          description: An identifier for the entitlement as defined by your API.
          example: yourcompany_entitlement789
          type: string
        datatype:
          description: The type of data supported by the entitlement.
          example: STRING
          type: string
        description:
          description: A description of the entitlement.
          example: Customers have access to 24/7 premium support channels through
            Slack and email.
          type: string
        created:
          description: Date at which entity was first created
          example: 2023-03-01T00:00:00Z
          format: date-time
          type: string
        modified:
          description: Date at which entity was last modified
          example: 2023-03-01T00:00:00Z
          format: date-time
          type: string
      required:
      - created
      - datatype
      - description
      - entitlementId
      - externalId
      - modified
      - name
      type: object
    CreateEntitlementDto:
      example:
        datatype: STRING
        name: Premium Support
        externalId: yourcompany_entitlement789
        description: Customers have access to 24/7 premium support channels through
          Slack and email.
      properties:
        name:
          description: The name of the entitlement
          example: Premium Support
          type: string
        externalId:
          description: An identifier for the entitlement as defined by your API.
          example: yourcompany_entitlement789
          type: string
        datatype:
          default: BOOLEAN
          description: The type of data supported by the entitlement.
          example: STRING
          type: string
        description:
          description: A description of the entitlement.
          example: Customers have access to 24/7 premium support channels through
            Slack and email.
          type: string
      required:
      - externalId
      - name
      type: object
    UpdateEntitlementDto:
      example:
        datatype: STRING
        name: Premium Support
        externalId: yourcompany_entitlement789
        description: Customers have access to 24/7 premium support channels through
          Slack and email.
      properties:
        name:
          description: The name of the entitlement
          example: Premium Support
          type: string
        externalId:
          description: An identifier for the entitlement as defined by your API.
          example: yourcompany_entitlement789
          type: string
        datatype:
          default: BOOLEAN
          description: The type of data supported by the entitlement.
          example: STRING
          type: string
        description:
          description: A description of the entitlement.
          example: Customers have access to 24/7 premium support channels through
            Slack and email.
          type: string
      type: object
    PlanPriceRequestDto:
      properties:
        currency:
          description: Three-letter currency code.
          enum:
          - USD
          - CAD
          - MXN
          - EUR
          - GBP
          - JPY
          - INR
          - CNY
          - AUD
          - NZD
          example: USD
          type: string
        tiers:
          description: Price tiers that define price for usage-based plans. Subscription
            plans will always have prices with a single tier.
          items:
            type: string
          type: array
      required:
      - currency
      - tiers
      type: object
    CreatePlanRequestDto:
      example:
        metadata:
          foo: bar
        dimensionId: dim_c5f32b8cd8934356b5167a3b2c6c6314
        price: null
        name: Requests Usage Plan
        nickname: requests_usage_v1
        externalId: yourcompany_plan123
        description: A usage plan based on the number of API requests
        planId: planId
        aggregation: COUNT
        interval: MONTH
        type: USAGE
      properties:
        planId:
          type: string
        name:
          description: "A human-readable name for the plan, visible on dashboards,\
            \ invoices, and reports."
          example: Requests Usage Plan
          type: string
        externalId:
          description: An identifier for the plan as defined by your API.
          example: yourcompany_plan123
          type: string
        description:
          description: "A human-readable description for the plan, visible on dashboards,\
            \ invoices, and reports."
          example: A usage plan based on the number of API requests
          type: string
        nickname:
          description: "An additional identifier for the plan, defined by you, that\
            \ is *not* visible to customers. If you have different *Monthly Active\
            \ Users Plan*s for different cohorts of customers, this is a useful place\
            \ to differentiate those."
          example: requests_usage_v1
          type: string
        type:
          description: The type of plan.
          enum:
          - USAGE
          - SUBSCRIPTION
          example: USAGE
          type: string
        dimensionId:
          description: An identifier of the dimension along which usage is aggregated
            in this plan.
          example: dim_c5f32b8cd8934356b5167a3b2c6c6314
          type: string
        aggregation:
          description: "The aggregation along which usage metrics are calculated in\
            \ this plan, relevant only for usage plans."
          example: COUNT
          type: string
        interval:
          description: The billing interval for the plan.
          enum:
          - MONTH
          example: MONTH
          type: string
        metadata:
          description: Arbitrary key-value pairs to attach to the object that can
            be useful for controlling functionality inside your API.
          example:
            foo: bar
          type: object
        price:
          $ref: '#/components/schemas/CreatePlanRequestDto_price'
      required:
      - name
      - planId
      - price
      - type
      type: object
    UpdatePlanRequestDto:
      example:
        metadata:
          foo: bar
        dimensionId: dim_c5f32b8cd8934356b5167a3b2c6c6314
        price: null
        name: Requests Usage Plan
        nickname: requests_usage_v1
        externalId: yourcompany_plan123
        description: A usage plan based on the number of API requests
        planId: planId
        aggregation: COUNT
        interval: MONTH
        type: USAGE
      properties:
        planId:
          type: string
        name:
          description: "A human-readable name for the plan, visible on dashboards,\
            \ invoices, and reports."
          example: Requests Usage Plan
          type: string
        externalId:
          description: An identifier for the plan as defined by your API.
          example: yourcompany_plan123
          type: string
        description:
          description: "A human-readable description for the plan, visible on dashboards,\
            \ invoices, and reports."
          example: A usage plan based on the number of API requests
          type: string
        nickname:
          description: "An additional identifier for the plan, defined by you, that\
            \ is *not* visible to customers. If you have different *Monthly Active\
            \ Users Plan*s for different cohorts of customers, this is a useful place\
            \ to differentiate those."
          example: requests_usage_v1
          type: string
        type:
          description: The type of plan.
          enum:
          - USAGE
          - SUBSCRIPTION
          example: USAGE
          type: string
        dimensionId:
          description: An identifier of the dimension along which usage is aggregated
            in this plan.
          example: dim_c5f32b8cd8934356b5167a3b2c6c6314
          type: string
        aggregation:
          description: "The aggregation along which usage metrics are calculated in\
            \ this plan, relevant only for usage plans."
          example: COUNT
          type: string
        interval:
          description: The billing interval for the plan.
          enum:
          - MONTH
          example: MONTH
          type: string
        metadata:
          description: Arbitrary key-value pairs to attach to the object that can
            be useful for controlling functionality inside your API.
          example:
            foo: bar
          type: object
        price:
          $ref: '#/components/schemas/CreatePlanRequestDto_price'
      type: object
    PlanEntitlementResponseDto:
      example:
        datatype: STRING
        created: 2023-03-01T00:00:00Z
        name: Premium Support
        entitlementId: ent_a44e148584d0463482c961b7f62f825d
        externalId: yourcompany_entitlement789
        description: Customers have access to 24/7 premium support channels through
          Slack and email.
        modified: 2023-03-01T00:00:00Z
        value: true
      properties:
        name:
          description: The name of the entitlement
          example: Premium Support
          type: string
        entitlementId:
          description: A Kable-defined identifier for the entitlement.
          example: ent_a44e148584d0463482c961b7f62f825d
          type: string
        externalId:
          description: An identifier for the entitlement as defined by your API.
          example: yourcompany_entitlement789
          type: string
        datatype:
          description: The type of data supported by the entitlement.
          example: STRING
          type: string
        description:
          description: A description of the entitlement.
          example: Customers have access to 24/7 premium support channels through
            Slack and email.
          type: string
        created:
          description: Date at which entity was first created
          example: 2023-03-01T00:00:00Z
          format: date-time
          type: string
        modified:
          description: Date at which entity was last modified
          example: 2023-03-01T00:00:00Z
          format: date-time
          type: string
        value:
          description: The value of the entitlement.
          example: true
          type: object
      required:
      - created
      - datatype
      - description
      - entitlementId
      - externalId
      - modified
      - name
      - value
      type: object
    UpdatePlanEntitlementRequestDto:
      example:
        value: true
      properties:
        value:
          description: The plan entitlement value
          example: true
          type: object
      required:
      - value
      type: object
    PlanEntitlementRequestDto:
      example:
        entitlementId: ent_a44e148584d0463482c961b7f62f825d
        value: true
      properties:
        entitlementId:
          description: The entitlement to assign.
          example: ent_a44e148584d0463482c961b7f62f825d
          type: string
        value:
          description: The value of the entitlement.
          example: true
          type: object
      required:
      - entitlementId
      - value
      type: object
    AddPlanEntitlementRequestDto:
      example:
        entitlements:
        - entitlementId: ent_a44e148584d0463482c961b7f62f825d
          value: true
        - entitlementId: ent_a44e148584d0463482c961b7f62f825d
          value: true
      properties:
        entitlements:
          description: The plan entitlements to add
          items:
            $ref: '#/components/schemas/PlanEntitlementRequestDto'
          type: array
      type: object
    RemovePlanEntitlementRequestDto:
      example:
        entitlementIds:
        - ent_a44e148584d0463482c961b7f62f825d
      properties:
        entitlementIds:
          description: Entitlements to remove
          example:
          - ent_a44e148584d0463482c961b7f62f825d
          items:
            type: string
          type: array
      type: object
    InvoiceCustomerResponseDto:
      properties:
        customerId:
          description: A Kable-defined identifier for the customer.
          example: cus_8276e1ac8ed84d21c64f31ae0082fe
          type: string
        clientId:
          description: "A unique identifier for the customer, defined by you."
          example: yourcompanyuser_1234567890
          type: string
        companyName:
          description: The name of the customer.
          example: Awesome Corp
          type: string
      required:
      - clientId
      - companyName
      - customerId
      type: object
    InvoicePriceResponseDto:
      properties:
        currency:
          description: Three-letter ISO currency code
          enum:
          - USD
          - CAD
          - MXN
          - EUR
          - GBP
          - JPY
          - INR
          - CNY
          - AUD
          - NZD
          - AED
          example: USD
          type: string
        amount:
          description: The total price amount.
          example: 499.99
          type: number
      required:
      - amount
      - currency
      type: object
    InvoiceUsageResponseDto:
      properties:
        aggregation:
          description: The aggregation type
          enum:
          - COUNT
          - COUNT_DISTINCT
          - SUM
          - MINIMUM
          - MAXIMUM
          example: COUNT
          type: string
        dimensionId:
          description: The identifier of the dimension along which usage is aggregated
            in this line item.
          example: dim_c5f32b8cd8934356b5167a3b2c6c6314
          type: string
        total:
          description: The total usage consumption amount.
          example: 35810
          type: number
      required:
      - aggregation
      - dimensionId
      - total
      type: object
    InvoiceLineItemTierResponseDto:
      example:
        price: null
        usage: null
      properties:
        usage:
          $ref: '#/components/schemas/InvoiceLineItemTierResponseDto_usage'
        price:
          $ref: '#/components/schemas/InvoiceLineItemTierResponseDto_price'
      required:
      - price
      type: object
    InvoiceLineItemResponseDto:
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        price: null
        usage: null
        planId: pln_a23e148584d0463482c961b7f62f824c
        items:
        - price: null
          usage: null
        - price: null
          usage: null
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        planId:
          description: The identifier of the plan to which this line item corresponds.
          example: pln_a23e148584d0463482c961b7f62f824c
          type: string
        price:
          $ref: '#/components/schemas/InvoiceLineItemTierResponseDto_price'
        usage:
          $ref: '#/components/schemas/InvoiceLineItemTierResponseDto_usage'
        items:
          description: Sub-line items associated with this line item.
          items:
            $ref: '#/components/schemas/InvoiceLineItemTierResponseDto'
          type: array
        startDate:
          description: Coverage period start date for the line item.
          format: date-time
          type: string
        endDate:
          description: Coverage period end date for the line item.
          format: date-time
          type: string
      required:
      - endDate
      - items
      - price
      - startDate
      type: object
    InvoiceResponseDto:
      example:
        kableClientId: kci_3c90e9ac92c64f31ae8ed84d21e18740
        price: null
        created: 2022-03-01T00:00:00Z
        postDate: 2022-03-01T00:00:00Z
        modified: 2022-03-01T00:00:00Z
        invoiceId: inv_346daaa242674b179ecc44f43b5b9db4
        items:
        - endDate: 2000-01-23T04:56:07.000+00:00
          price: null
          usage: null
          planId: pln_a23e148584d0463482c961b7f62f824c
          items:
          - price: null
            usage: null
          - price: null
            usage: null
          startDate: 2000-01-23T04:56:07.000+00:00
        - endDate: 2000-01-23T04:56:07.000+00:00
          price: null
          usage: null
          planId: pln_a23e148584d0463482c961b7f62f824c
          items:
          - price: null
            usage: null
          - price: null
            usage: null
          startDate: 2000-01-23T04:56:07.000+00:00
        customer: null
        status: COMPLETE
      properties:
        kableClientId:
          description: "Your Kable client ID, found in the dashboard of your Kable\
            \ account"
          example: kci_3c90e9ac92c64f31ae8ed84d21e18740
          type: string
        invoiceId:
          description: A Kable-defined identifier for the customer.
          example: inv_346daaa242674b179ecc44f43b5b9db4
          type: string
        customer:
          $ref: '#/components/schemas/InvoiceResponseDto_customer'
        postDate:
          description: The date the invoice was posted.
          example: 2022-03-01T00:00:00Z
          format: date-time
          type: string
        status:
          description: The status of the invoice.
          enum:
          - PENDING
          - PROCESSING
          - COMPLETE
          - FAILED
          example: COMPLETE
          type: string
        price:
          $ref: '#/components/schemas/InvoiceResponseDto_price'
        items:
          description: The invoice line items.
          items:
            $ref: '#/components/schemas/InvoiceLineItemResponseDto'
          type: array
        created:
          description: Date at which entity was first created
          example: 2022-03-01T00:00:00Z
          format: date-time
          type: string
        modified:
          description: Date at which entity was last modified
          example: 2022-03-01T00:00:00Z
          format: date-time
          type: string
      required:
      - created
      - customer
      - invoiceId
      - items
      - kableClientId
      - modified
      - postDate
      - price
      - status
      type: object
    CreateTokenDto:
      example:
        clientId: yourcompanyuser_1234567890
      properties:
        clientId:
          example: yourcompanyuser_1234567890
          type: string
      required:
      - clientId
      type: object
    DashboardTokenResponseDto:
      example:
        token: 30e8c05f9add4ebeaab3ab2f42bdde31
      properties:
        token:
          description: The access token value
          example: 30e8c05f9add4ebeaab3ab2f42bdde31
          type: string
      required:
      - token
      type: object
    UsageMetricRequestDto:
      example:
        clientId: yourcompanyuser_1234567890
        dimensionId: dim_c5f32b8cd8934356b5167a3b2c6c6314
        endDate: 2022-04-01T00:00:00Z
        dimensionKey: userId
        aggregation: COUNT
        interval: DAY
        startDate: 2022-03-01T00:00:00Z
      properties:
        aggregation:
          description: The aggregation by which to evaluate the metric.
          enum:
          - COUNT
          - COUNT_DISTINCT
          - SUM
          - MAXIMUM
          - MINIMUM
          example: COUNT
          type: string
        dimensionId:
          description: |-
            The dimension to measure.

            Note that one of either `dimensionId` or `dimensionKey` must be provided.
          example: dim_c5f32b8cd8934356b5167a3b2c6c6314
          type: string
        dimensionKey:
          description: |-
            The dimension to measure.

            Note that one of either `dimensionId` or `dimensionKey` must be provided.
          example: userId
          type: string
        startDate:
          description: Start of the period over which to query. Timestamps must be
            formatted as RFC 3339 strings like `2022-01-09T09:32:01Z`.
          example: 2022-03-01T00:00:00Z
          format: date-time
          type: string
        endDate:
          description: End of the period over which to query. Timestamps must be formatted
            as RFC 3339 strings like `2022-01-09T09:32:01Z`.
          example: 2022-04-01T00:00:00Z
          format: date-time
          type: string
        interval:
          description: Timeseries unit duration over which to return intervals.
          enum:
          - MINUTE
          - HOUR
          - DAY
          - WEEK
          - YEAR
          example: DAY
          type: string
        clientId:
          description: "When provided, query will consider only this customer. When\
            \ `null`, query will consider all of your customers."
          example: yourcompanyuser_1234567890
          type: string
      required:
      - aggregation
      - endDate
      - interval
      - startDate
      type: object
    UsageMetricIntervalResponseDto:
      example:
        total: 2397
        clientId: yourcompanyuser_1234567890
        intervalEnd: 2022-03-02T00:00:00Z
        intervalStart: 2022-03-01T00:00:00Z
        dimension: null
      properties:
        intervalStart:
          description: Start of the interval over which usage was evaluated.
          example: 2022-03-01T00:00:00Z
          format: date-time
          type: string
        intervalEnd:
          description: End of the interval over which usage was evaluated.
          example: 2022-03-02T00:00:00Z
          format: date-time
          type: string
        dimension:
          $ref: '#/components/schemas/UsageMetricIntervalResponseDto_dimension'
        clientId:
          description: The customer for which usage was evaluated.
          example: yourcompanyuser_1234567890
          type: string
        total:
          description: The usage metric value for the given dimension and interval.
          example: 2397
          type: number
      required:
      - dimension
      - intervalEnd
      - intervalStart
      - total
      type: object
    UsageMetricResponseDto:
      example:
        total: 841395
        intervals:
        - total: 2397
          clientId: yourcompanyuser_1234567890
          intervalEnd: 2022-03-02T00:00:00Z
          intervalStart: 2022-03-01T00:00:00Z
          dimension: null
        - total: 2397
          clientId: yourcompanyuser_1234567890
          intervalEnd: 2022-03-02T00:00:00Z
          intervalStart: 2022-03-01T00:00:00Z
          dimension: null
        clientId: yourcompanyuser_1234567890
        endDate: 2022-04-01T00:00:00Z
        dimension: null
        startDate: 2022-03-01T00:00:00Z
      properties:
        startDate:
          description: Start of the period over which usage was evaluated.
          example: 2022-03-01T00:00:00Z
          format: date-time
          type: string
        endDate:
          description: End of the period over which usage was evaluated.
          example: 2022-04-01T00:00:00Z
          format: date-time
          type: string
        dimension:
          $ref: '#/components/schemas/UsageMetricIntervalResponseDto_dimension'
        clientId:
          description: The customer for which usage was evaluated.
          example: yourcompanyuser_1234567890
          type: string
        total:
          description: The usage metric value for the given dimension and interval.
          example: 841395
          type: number
        intervals:
          description: Time-series intervals over which usage was evaluated.
          items:
            $ref: '#/components/schemas/UsageMetricIntervalResponseDto'
          type: array
      required:
      - dimension
      - endDate
      - intervals
      - startDate
      - total
      type: object
    EventDto:
      example:
        clientId: yourcompanyuser_1234567890
        data:
          userId: xyz123
          messageId: msg_824ae20a
          countOfSomethingInteresting: 10
          accountBalance: 399.99
        transactionId: 4e7c0f73-ef84-490c-8a47-4c7a3bec2df0
        timestamp: 2022-01-09T09:32:01Z
      properties:
        clientId:
          description: "A unique identifier for the customer, defined by you."
          example: yourcompanyuser_1234567890
          type: string
        timestamp:
          description: When the event occurred. Timestamps must be formatted as RFC-3339
            strings like `2022-01-09T09:32:01Z`.
          example: 2022-01-09T09:32:01Z
          format: date-time
          type: string
        data:
          description: "`data` is a JSON-formatted object containing key-value pairs\
            \ of information to be tracked by Kable. The keys provided in the `data`\
            \ JSON correspond to the Dimensions you've defined on Kable.\n\nWhen using\
            \ a Kable library, you must **always** include a `clientId` in the `record`\
            \ payload so that Kable can accurately attribute events to your customers."
          example:
            userId: xyz123
            messageId: msg_824ae20a
            countOfSomethingInteresting: 10
            accountBalance: 399.99
          type: object
        transactionId:
          description: "A unique identifier for the event, used as an idempotency\
            \ key for event deduplication."
          example: 4e7c0f73-ef84-490c-8a47-4c7a3bec2df0
          type: string
      required:
      - clientId
      - timestamp
      type: object
    PlanResponseDto_price:
      allOf:
      - $ref: '#/components/schemas/PlanPriceResponseDto'
      description: The monthly price of the plan.
    CustomerResponseDto_billingContact:
      allOf:
      - $ref: '#/components/schemas/BillingContactRequestDto'
      description: A point of contact for invoices and other billing-related communications.
    CreatePlanRequestDto_price:
      allOf:
      - $ref: '#/components/schemas/PlanPriceRequestDto'
      description: The monthly price of the plan.
    InvoiceLineItemTierResponseDto_usage:
      allOf:
      - $ref: '#/components/schemas/InvoiceUsageResponseDto'
      description: The usage consumption for the line item.
    InvoiceLineItemTierResponseDto_price:
      allOf:
      - $ref: '#/components/schemas/InvoicePriceResponseDto'
      description: The price of the line item.
    InvoiceResponseDto_customer:
      allOf:
      - $ref: '#/components/schemas/InvoiceCustomerResponseDto'
      description: The customer for whom the invoice was generated.
    InvoiceResponseDto_price:
      allOf:
      - $ref: '#/components/schemas/InvoicePriceResponseDto'
      description: The total price of the invoice.
    UsageMetricIntervalResponseDto_dimension:
      allOf:
      - $ref: '#/components/schemas/DimensionResponseDto'
      description: The dimension for which usage was evaluated.

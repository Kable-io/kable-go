/*
Kable API

The Kable API allows developers to manage customers, plans, and usage data for their API.  ## API Host and Environments  Kable is accessible in Live and Test environments for authentication and metering of client API requests. You will have separate API keys to access each environment.  You should only use Kable's Live environment for your own production data. All other configured environments should use Kable's Test environment.  ## API Protocols and Headers  All requests to the Kable API are made over HTTPS TLS v1.2+ to ensure security. Calls made over HTTP will fail. Any requests without proper authentication will also fail.  The Kable API uses standard JSON for requests and responses. Be sure to set both the `Content-Type` and `Accept` headers on each request to `application/json`.  Each Kable API response includes a `requestId` as the `X-REQUEST-ID` response header. The `requestId` is included on most responses regardless whether the API request succeeded or failed. You can use this `requestId` to help with debugging or when contacting support regarding a specific API call.  ## API Versioning  All Kable endpoints are versioned. After the host, each API can be found at `/api/vX/...` where X is the API version.  We strive to ensure that changes to the Kable API are backward compatible. Sometimes, though, we must break from older design paradigms to make the product better. When this happens, a new version of the API is released.  The current version of the Kable API is `v1`.  

API version: 1.0.0
Contact: contact@kable.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// InvoiceResponseDto struct for InvoiceResponseDto
type InvoiceResponseDto struct {
	// Your Kable client ID, found in the dashboard of your Kable account
	KableClientId string `json:"kableClientId"`
	// A Kable-defined identifier for the customer.
	InvoiceId string `json:"invoiceId"`
	Customer InvoiceResponseDtoCustomer `json:"customer"`
	// The date the invoice was posted.
	PostDate time.Time `json:"postDate"`
	// The status of the invoice.
	Status string `json:"status"`
	Price InvoiceResponseDtoPrice `json:"price"`
	// The invoice line items.
	Items []InvoiceLineItemResponseDto `json:"items"`
	// Date at which entity was first created
	Created time.Time `json:"created"`
	// Date at which entity was last modified
	Modified time.Time `json:"modified"`
}

// NewInvoiceResponseDto instantiates a new InvoiceResponseDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvoiceResponseDto(kableClientId string, invoiceId string, customer InvoiceResponseDtoCustomer, postDate time.Time, status string, price InvoiceResponseDtoPrice, items []InvoiceLineItemResponseDto, created time.Time, modified time.Time) *InvoiceResponseDto {
	this := InvoiceResponseDto{}
	this.KableClientId = kableClientId
	this.InvoiceId = invoiceId
	this.Customer = customer
	this.PostDate = postDate
	this.Status = status
	this.Price = price
	this.Items = items
	this.Created = created
	this.Modified = modified
	return &this
}

// NewInvoiceResponseDtoWithDefaults instantiates a new InvoiceResponseDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvoiceResponseDtoWithDefaults() *InvoiceResponseDto {
	this := InvoiceResponseDto{}
	return &this
}

// GetKableClientId returns the KableClientId field value
func (o *InvoiceResponseDto) GetKableClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KableClientId
}

// GetKableClientIdOk returns a tuple with the KableClientId field value
// and a boolean to check if the value has been set.
func (o *InvoiceResponseDto) GetKableClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KableClientId, true
}

// SetKableClientId sets field value
func (o *InvoiceResponseDto) SetKableClientId(v string) {
	o.KableClientId = v
}

// GetInvoiceId returns the InvoiceId field value
func (o *InvoiceResponseDto) GetInvoiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvoiceId
}

// GetInvoiceIdOk returns a tuple with the InvoiceId field value
// and a boolean to check if the value has been set.
func (o *InvoiceResponseDto) GetInvoiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvoiceId, true
}

// SetInvoiceId sets field value
func (o *InvoiceResponseDto) SetInvoiceId(v string) {
	o.InvoiceId = v
}

// GetCustomer returns the Customer field value
func (o *InvoiceResponseDto) GetCustomer() InvoiceResponseDtoCustomer {
	if o == nil {
		var ret InvoiceResponseDtoCustomer
		return ret
	}

	return o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value
// and a boolean to check if the value has been set.
func (o *InvoiceResponseDto) GetCustomerOk() (*InvoiceResponseDtoCustomer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Customer, true
}

// SetCustomer sets field value
func (o *InvoiceResponseDto) SetCustomer(v InvoiceResponseDtoCustomer) {
	o.Customer = v
}

// GetPostDate returns the PostDate field value
func (o *InvoiceResponseDto) GetPostDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.PostDate
}

// GetPostDateOk returns a tuple with the PostDate field value
// and a boolean to check if the value has been set.
func (o *InvoiceResponseDto) GetPostDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PostDate, true
}

// SetPostDate sets field value
func (o *InvoiceResponseDto) SetPostDate(v time.Time) {
	o.PostDate = v
}

// GetStatus returns the Status field value
func (o *InvoiceResponseDto) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *InvoiceResponseDto) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *InvoiceResponseDto) SetStatus(v string) {
	o.Status = v
}

// GetPrice returns the Price field value
func (o *InvoiceResponseDto) GetPrice() InvoiceResponseDtoPrice {
	if o == nil {
		var ret InvoiceResponseDtoPrice
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *InvoiceResponseDto) GetPriceOk() (*InvoiceResponseDtoPrice, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *InvoiceResponseDto) SetPrice(v InvoiceResponseDtoPrice) {
	o.Price = v
}

// GetItems returns the Items field value
func (o *InvoiceResponseDto) GetItems() []InvoiceLineItemResponseDto {
	if o == nil {
		var ret []InvoiceLineItemResponseDto
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *InvoiceResponseDto) GetItemsOk() ([]InvoiceLineItemResponseDto, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *InvoiceResponseDto) SetItems(v []InvoiceLineItemResponseDto) {
	o.Items = v
}

// GetCreated returns the Created field value
func (o *InvoiceResponseDto) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *InvoiceResponseDto) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *InvoiceResponseDto) SetCreated(v time.Time) {
	o.Created = v
}

// GetModified returns the Modified field value
func (o *InvoiceResponseDto) GetModified() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value
// and a boolean to check if the value has been set.
func (o *InvoiceResponseDto) GetModifiedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Modified, true
}

// SetModified sets field value
func (o *InvoiceResponseDto) SetModified(v time.Time) {
	o.Modified = v
}

func (o InvoiceResponseDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["kableClientId"] = o.KableClientId
	}
	if true {
		toSerialize["invoiceId"] = o.InvoiceId
	}
	if true {
		toSerialize["customer"] = o.Customer
	}
	if true {
		toSerialize["postDate"] = o.PostDate
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["price"] = o.Price
	}
	if true {
		toSerialize["items"] = o.Items
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["modified"] = o.Modified
	}
	return json.Marshal(toSerialize)
}

type NullableInvoiceResponseDto struct {
	value *InvoiceResponseDto
	isSet bool
}

func (v NullableInvoiceResponseDto) Get() *InvoiceResponseDto {
	return v.value
}

func (v *NullableInvoiceResponseDto) Set(val *InvoiceResponseDto) {
	v.value = val
	v.isSet = true
}

func (v NullableInvoiceResponseDto) IsSet() bool {
	return v.isSet
}

func (v *NullableInvoiceResponseDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvoiceResponseDto(val *InvoiceResponseDto) *NullableInvoiceResponseDto {
	return &NullableInvoiceResponseDto{value: val, isSet: true}
}

func (v NullableInvoiceResponseDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvoiceResponseDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


